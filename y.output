Terminals unused in grammar

   OP_IGUAL
   COMENTARIO_A
   COMENTARIO_C
   COMENTARIO
   .


Gramática

    0 $accept: programa $end

    1 programa: prog

    2 prog: sentencia

    3 sentencia: sentencia grammar PUNTO_COMA
    4          | grammar PUNTO_COMA

    5 grammar: dec_var
    6        | asig
    7        | if
    8        | while
    9        | between
   10        | take
   11        | write
   12        | read

   13 dec_var: DECVAR declaraciones ENDDEC

   14 declaraciones: lista_var DOS_PUNTOS tipo_dato

   15 tipo_dato: INT
   16          | REAL
   17          | STRING

   18 lista_var: lista_var COMA VARIABLE
   19          | VARIABLE

   20 asig: VARIABLE OP_ASIG expresion
   21     | VARIABLE OP_ASIG CONST_STRING

   22 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C

   23 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   24     | TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C

   25 lista_cte: CONST_INT
   26          | CONST_REAL
   27          | lista_cte PUNTO_COMA CONST_INT
   28          | lista_cte PUNTO_COMA CONST_REAL

   29 write: WRITE VARIABLE
   30      | WRITE CONST_STRING
   31      | WRITE CONST_INT

   32 read: READ VARIABLE

   33 while: WHILE condicion LLAVE_A sentencia LLAVE_C ENDWHILE

   34 if: IF condicion LLAVE_A sentencia LLAVE_C ENDIF
   35   | IF condicion LLAVE_A sentencia LLAVE_C ELSE LLAVE_A sentencia LLAVE_C ENDIF
   36   | IF condicion LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF

   37 expresion: expresion OP_SUMA termino
   38          | expresion OP_RESTA termino
   39          | termino

   40 termino: termino OP_MULT factor
   41        | termino OP_DIV factor
   42        | factor

   43 factor: PARENTESIS_A expresion PARENTESIS_C
   44       | CONST_INT
   45       | CONST_REAL
   46       | VARIABLE

   47 cond_simple: expresion OP_COMP expresion
   48            | expresion OP_MAY_IGU expresion
   49            | expresion OP_MEN_IGU expresion
   50            | expresion OP_MAYOR expresion
   51            | expresion OP_MENOR expresion
   52            | expresion OP_NOT expresion

   53 condicion: PARENTESIS_A cond_simple PARENTESIS_C
   54          | PARENTESIS_A cond_simple OP_AND cond_simple PARENTESIS_C
   55          | PARENTESIS_A cond_simple OP_OR cond_simple PARENTESIS_C

   56 operador_algebraico: OP_SUMA
   57                    | OP_RESTA
   58                    | OP_DIV
   59                    | OP_MULT


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
WHILE (258) 33
ENDWHILE (259) 33
IF (260) 34 35 36
ELSE (261) 35 36
ENDIF (262) 34 35 36
WRITE (263) 29 30 31
READ (264) 32
BETWEEN (265) 22
TAKE (266) 23 24
DECVAR (267) 13
ENDDEC (268) 13
INT (269) 15
REAL (270) 16
STRING (271) 17
CORCHETE_A (272) 22 23 24
CORCHETE_C (273) 22 23 24
LLAVE_A (274) 33 34 35 36
LLAVE_C (275) 33 34 35 36
PARENTESIS_A (276) 22 23 24 43 53 54 55
PARENTESIS_C (277) 22 23 24 43 53 54 55
COMA (278) 18 22
PUNTO_COMA (279) 3 4 22 23 24 27 28
DOS_PUNTOS (280) 14
OP_MENOR (281) 51
OP_MAYOR (282) 50
OP_MEN_IGU (283) 49
OP_MAY_IGU (284) 48
OP_NOT (285) 52
OP_AND (286) 54
OP_OR (287) 55
OP_COMP (288) 47
OP_IGUAL (289)
CONST_INT (290) 23 24 25 27 31 44
CONST_REAL (291) 26 28 45
CONST_STRING (292) 21 30
VARIABLE (293) 18 19 20 21 22 29 32 46
COMENTARIO_A (294)
COMENTARIO_C (295)
COMENTARIO (296)
. (297)
OP_SUMA (298) 37 56
OP_RESTA (299) 38 57
OP_DIV (300) 41 58
OP_MULT (301) 40 59
OP_ASIG (302) 20 21


No terminales con las reglas donde aparecen

$accept (48)
    en la izquierda: 0
programa (49)
    en la izquierda: 1, en la derecha: 0
prog (50)
    en la izquierda: 2, en la derecha: 1
sentencia (51)
    en la izquierda: 3 4, en la derecha: 2 3 33 34 35 36
grammar (52)
    en la izquierda: 5 6 7 8 9 10 11 12, en la derecha: 3 4
dec_var (53)
    en la izquierda: 13, en la derecha: 5
declaraciones (54)
    en la izquierda: 14, en la derecha: 13
tipo_dato (55)
    en la izquierda: 15 16 17, en la derecha: 14
lista_var (56)
    en la izquierda: 18 19, en la derecha: 14 18
asig (57)
    en la izquierda: 20 21, en la derecha: 6
between (58)
    en la izquierda: 22, en la derecha: 9
take (59)
    en la izquierda: 23 24, en la derecha: 10
lista_cte (60)
    en la izquierda: 25 26 27 28, en la derecha: 23 27 28
write (61)
    en la izquierda: 29 30 31, en la derecha: 11
read (62)
    en la izquierda: 32, en la derecha: 12
while (63)
    en la izquierda: 33, en la derecha: 8
if (64)
    en la izquierda: 34 35 36, en la derecha: 7
expresion (65)
    en la izquierda: 37 38 39, en la derecha: 20 22 37 38 43 47 48
    49 50 51 52
termino (66)
    en la izquierda: 40 41 42, en la derecha: 37 38 39 40 41
factor (67)
    en la izquierda: 43 44 45 46, en la derecha: 40 41 42
cond_simple (68)
    en la izquierda: 47 48 49 50 51 52, en la derecha: 53 54 55
condicion (69)
    en la izquierda: 53 54 55, en la derecha: 33 34 35 36
operador_algebraico (70)
    en la izquierda: 56 57 58 59, en la derecha: 23 24


estado 0

    0 $accept: . programa $end

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    VARIABLE  desplazar e ir al estado 8

    programa   ir al estado 9
    prog       ir al estado 10
    sentencia  ir al estado 11
    grammar    ir al estado 12
    dec_var    ir al estado 13
    asig       ir al estado 14
    between    ir al estado 15
    take       ir al estado 16
    write      ir al estado 17
    read       ir al estado 18
    while      ir al estado 19
    if         ir al estado 20


estado 1

   33 while: WHILE . condicion LLAVE_A sentencia LLAVE_C ENDWHILE

    PARENTESIS_A  desplazar e ir al estado 21

    condicion  ir al estado 22


estado 2

   34 if: IF . condicion LLAVE_A sentencia LLAVE_C ENDIF
   35   | IF . condicion LLAVE_A sentencia LLAVE_C ELSE LLAVE_A sentencia LLAVE_C ENDIF
   36   | IF . condicion LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF

    PARENTESIS_A  desplazar e ir al estado 21

    condicion  ir al estado 23


estado 3

   29 write: WRITE . VARIABLE
   30      | WRITE . CONST_STRING
   31      | WRITE . CONST_INT

    CONST_INT     desplazar e ir al estado 24
    CONST_STRING  desplazar e ir al estado 25
    VARIABLE      desplazar e ir al estado 26


estado 4

   32 read: READ . VARIABLE

    VARIABLE  desplazar e ir al estado 27


estado 5

   22 between: BETWEEN . PARENTESIS_A VARIABLE COMA CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 28


estado 6

   23 take: TAKE . PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   24     | TAKE . PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 29


estado 7

   13 dec_var: DECVAR . declaraciones ENDDEC

    VARIABLE  desplazar e ir al estado 30

    declaraciones  ir al estado 31
    lista_var      ir al estado 32


estado 8

   20 asig: VARIABLE . OP_ASIG expresion
   21     | VARIABLE . OP_ASIG CONST_STRING

    OP_ASIG  desplazar e ir al estado 33


estado 9

    0 $accept: programa . $end

    $end  desplazar e ir al estado 34


estado 10

    1 programa: prog .

    $default  reduce usando la regla 1 (programa)


estado 11

    2 prog: sentencia .
    3 sentencia: sentencia . grammar PUNTO_COMA

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    VARIABLE  desplazar e ir al estado 8

    $default  reduce usando la regla 2 (prog)

    grammar  ir al estado 35
    dec_var  ir al estado 13
    asig     ir al estado 14
    between  ir al estado 15
    take     ir al estado 16
    write    ir al estado 17
    read     ir al estado 18
    while    ir al estado 19
    if       ir al estado 20


estado 12

    4 sentencia: grammar . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 36


estado 13

    5 grammar: dec_var .

    $default  reduce usando la regla 5 (grammar)


estado 14

    6 grammar: asig .

    $default  reduce usando la regla 6 (grammar)


estado 15

    9 grammar: between .

    $default  reduce usando la regla 9 (grammar)


estado 16

   10 grammar: take .

    $default  reduce usando la regla 10 (grammar)


estado 17

   11 grammar: write .

    $default  reduce usando la regla 11 (grammar)


estado 18

   12 grammar: read .

    $default  reduce usando la regla 12 (grammar)


estado 19

    8 grammar: while .

    $default  reduce usando la regla 8 (grammar)


estado 20

    7 grammar: if .

    $default  reduce usando la regla 7 (grammar)


estado 21

   53 condicion: PARENTESIS_A . cond_simple PARENTESIS_C
   54          | PARENTESIS_A . cond_simple OP_AND cond_simple PARENTESIS_C
   55          | PARENTESIS_A . cond_simple OP_OR cond_simple PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    expresion    ir al estado 41
    termino      ir al estado 42
    factor       ir al estado 43
    cond_simple  ir al estado 44


estado 22

   33 while: WHILE condicion . LLAVE_A sentencia LLAVE_C ENDWHILE

    LLAVE_A  desplazar e ir al estado 45


estado 23

   34 if: IF condicion . LLAVE_A sentencia LLAVE_C ENDIF
   35   | IF condicion . LLAVE_A sentencia LLAVE_C ELSE LLAVE_A sentencia LLAVE_C ENDIF
   36   | IF condicion . LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF

    LLAVE_A  desplazar e ir al estado 46


estado 24

   31 write: WRITE CONST_INT .

    $default  reduce usando la regla 31 (write)


estado 25

   30 write: WRITE CONST_STRING .

    $default  reduce usando la regla 30 (write)


estado 26

   29 write: WRITE VARIABLE .

    $default  reduce usando la regla 29 (write)


estado 27

   32 read: READ VARIABLE .

    $default  reduce usando la regla 32 (read)


estado 28

   22 between: BETWEEN PARENTESIS_A . VARIABLE COMA CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C

    VARIABLE  desplazar e ir al estado 47


estado 29

   23 take: TAKE PARENTESIS_A . operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   24     | TAKE PARENTESIS_A . operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C

    OP_SUMA   desplazar e ir al estado 48
    OP_RESTA  desplazar e ir al estado 49
    OP_DIV    desplazar e ir al estado 50
    OP_MULT   desplazar e ir al estado 51

    operador_algebraico  ir al estado 52


estado 30

   19 lista_var: VARIABLE .

    $default  reduce usando la regla 19 (lista_var)


estado 31

   13 dec_var: DECVAR declaraciones . ENDDEC

    ENDDEC  desplazar e ir al estado 53


estado 32

   14 declaraciones: lista_var . DOS_PUNTOS tipo_dato
   18 lista_var: lista_var . COMA VARIABLE

    COMA        desplazar e ir al estado 54
    DOS_PUNTOS  desplazar e ir al estado 55


estado 33

   20 asig: VARIABLE OP_ASIG . expresion
   21     | VARIABLE OP_ASIG . CONST_STRING

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    CONST_STRING  desplazar e ir al estado 56
    VARIABLE      desplazar e ir al estado 40

    expresion  ir al estado 57
    termino    ir al estado 42
    factor     ir al estado 43


estado 34

    0 $accept: programa $end .

    $default  aceptar


estado 35

    3 sentencia: sentencia grammar . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 58


estado 36

    4 sentencia: grammar PUNTO_COMA .

    $default  reduce usando la regla 4 (sentencia)


estado 37

   43 factor: PARENTESIS_A . expresion PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    expresion  ir al estado 59
    termino    ir al estado 42
    factor     ir al estado 43


estado 38

   44 factor: CONST_INT .

    $default  reduce usando la regla 44 (factor)


estado 39

   45 factor: CONST_REAL .

    $default  reduce usando la regla 45 (factor)


estado 40

   46 factor: VARIABLE .

    $default  reduce usando la regla 46 (factor)


estado 41

   37 expresion: expresion . OP_SUMA termino
   38          | expresion . OP_RESTA termino
   47 cond_simple: expresion . OP_COMP expresion
   48            | expresion . OP_MAY_IGU expresion
   49            | expresion . OP_MEN_IGU expresion
   50            | expresion . OP_MAYOR expresion
   51            | expresion . OP_MENOR expresion
   52            | expresion . OP_NOT expresion

    OP_MENOR    desplazar e ir al estado 60
    OP_MAYOR    desplazar e ir al estado 61
    OP_MEN_IGU  desplazar e ir al estado 62
    OP_MAY_IGU  desplazar e ir al estado 63
    OP_NOT      desplazar e ir al estado 64
    OP_COMP     desplazar e ir al estado 65
    OP_SUMA     desplazar e ir al estado 66
    OP_RESTA    desplazar e ir al estado 67


estado 42

   39 expresion: termino .
   40 termino: termino . OP_MULT factor
   41        | termino . OP_DIV factor

    OP_DIV   desplazar e ir al estado 68
    OP_MULT  desplazar e ir al estado 69

    $default  reduce usando la regla 39 (expresion)


estado 43

   42 termino: factor .

    $default  reduce usando la regla 42 (termino)


estado 44

   53 condicion: PARENTESIS_A cond_simple . PARENTESIS_C
   54          | PARENTESIS_A cond_simple . OP_AND cond_simple PARENTESIS_C
   55          | PARENTESIS_A cond_simple . OP_OR cond_simple PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 70
    OP_AND        desplazar e ir al estado 71
    OP_OR         desplazar e ir al estado 72


estado 45

   33 while: WHILE condicion LLAVE_A . sentencia LLAVE_C ENDWHILE

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    VARIABLE  desplazar e ir al estado 8

    sentencia  ir al estado 73
    grammar    ir al estado 12
    dec_var    ir al estado 13
    asig       ir al estado 14
    between    ir al estado 15
    take       ir al estado 16
    write      ir al estado 17
    read       ir al estado 18
    while      ir al estado 19
    if         ir al estado 20


estado 46

   34 if: IF condicion LLAVE_A . sentencia LLAVE_C ENDIF
   35   | IF condicion LLAVE_A . sentencia LLAVE_C ELSE LLAVE_A sentencia LLAVE_C ENDIF
   36   | IF condicion LLAVE_A . sentencia LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    VARIABLE  desplazar e ir al estado 8

    sentencia  ir al estado 74
    grammar    ir al estado 12
    dec_var    ir al estado 13
    asig       ir al estado 14
    between    ir al estado 15
    take       ir al estado 16
    write      ir al estado 17
    read       ir al estado 18
    while      ir al estado 19
    if         ir al estado 20


estado 47

   22 between: BETWEEN PARENTESIS_A VARIABLE . COMA CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C

    COMA  desplazar e ir al estado 75


estado 48

   56 operador_algebraico: OP_SUMA .

    $default  reduce usando la regla 56 (operador_algebraico)


estado 49

   57 operador_algebraico: OP_RESTA .

    $default  reduce usando la regla 57 (operador_algebraico)


estado 50

   58 operador_algebraico: OP_DIV .

    $default  reduce usando la regla 58 (operador_algebraico)


estado 51

   59 operador_algebraico: OP_MULT .

    $default  reduce usando la regla 59 (operador_algebraico)


estado 52

   23 take: TAKE PARENTESIS_A operador_algebraico . PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   24     | TAKE PARENTESIS_A operador_algebraico . PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C

    PUNTO_COMA  desplazar e ir al estado 76


estado 53

   13 dec_var: DECVAR declaraciones ENDDEC .

    $default  reduce usando la regla 13 (dec_var)


estado 54

   18 lista_var: lista_var COMA . VARIABLE

    VARIABLE  desplazar e ir al estado 77


estado 55

   14 declaraciones: lista_var DOS_PUNTOS . tipo_dato

    INT     desplazar e ir al estado 78
    REAL    desplazar e ir al estado 79
    STRING  desplazar e ir al estado 80

    tipo_dato  ir al estado 81


estado 56

   21 asig: VARIABLE OP_ASIG CONST_STRING .

    $default  reduce usando la regla 21 (asig)


estado 57

   20 asig: VARIABLE OP_ASIG expresion .
   37 expresion: expresion . OP_SUMA termino
   38          | expresion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 66
    OP_RESTA  desplazar e ir al estado 67

    $default  reduce usando la regla 20 (asig)


estado 58

    3 sentencia: sentencia grammar PUNTO_COMA .

    $default  reduce usando la regla 3 (sentencia)


estado 59

   37 expresion: expresion . OP_SUMA termino
   38          | expresion . OP_RESTA termino
   43 factor: PARENTESIS_A expresion . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 82
    OP_SUMA       desplazar e ir al estado 66
    OP_RESTA      desplazar e ir al estado 67


estado 60

   51 cond_simple: expresion OP_MENOR . expresion

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    expresion  ir al estado 83
    termino    ir al estado 42
    factor     ir al estado 43


estado 61

   50 cond_simple: expresion OP_MAYOR . expresion

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    expresion  ir al estado 84
    termino    ir al estado 42
    factor     ir al estado 43


estado 62

   49 cond_simple: expresion OP_MEN_IGU . expresion

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    expresion  ir al estado 85
    termino    ir al estado 42
    factor     ir al estado 43


estado 63

   48 cond_simple: expresion OP_MAY_IGU . expresion

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    expresion  ir al estado 86
    termino    ir al estado 42
    factor     ir al estado 43


estado 64

   52 cond_simple: expresion OP_NOT . expresion

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    expresion  ir al estado 87
    termino    ir al estado 42
    factor     ir al estado 43


estado 65

   47 cond_simple: expresion OP_COMP . expresion

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    expresion  ir al estado 88
    termino    ir al estado 42
    factor     ir al estado 43


estado 66

   37 expresion: expresion OP_SUMA . termino

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    termino  ir al estado 89
    factor   ir al estado 43


estado 67

   38 expresion: expresion OP_RESTA . termino

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    termino  ir al estado 90
    factor   ir al estado 43


estado 68

   41 termino: termino OP_DIV . factor

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    factor  ir al estado 91


estado 69

   40 termino: termino OP_MULT . factor

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    factor  ir al estado 92


estado 70

   53 condicion: PARENTESIS_A cond_simple PARENTESIS_C .

    $default  reduce usando la regla 53 (condicion)


estado 71

   54 condicion: PARENTESIS_A cond_simple OP_AND . cond_simple PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    expresion    ir al estado 41
    termino      ir al estado 42
    factor       ir al estado 43
    cond_simple  ir al estado 93


estado 72

   55 condicion: PARENTESIS_A cond_simple OP_OR . cond_simple PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    expresion    ir al estado 41
    termino      ir al estado 42
    factor       ir al estado 43
    cond_simple  ir al estado 94


estado 73

    3 sentencia: sentencia . grammar PUNTO_COMA
   33 while: WHILE condicion LLAVE_A sentencia . LLAVE_C ENDWHILE

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    LLAVE_C   desplazar e ir al estado 95
    VARIABLE  desplazar e ir al estado 8

    grammar  ir al estado 35
    dec_var  ir al estado 13
    asig     ir al estado 14
    between  ir al estado 15
    take     ir al estado 16
    write    ir al estado 17
    read     ir al estado 18
    while    ir al estado 19
    if       ir al estado 20


estado 74

    3 sentencia: sentencia . grammar PUNTO_COMA
   34 if: IF condicion LLAVE_A sentencia . LLAVE_C ENDIF
   35   | IF condicion LLAVE_A sentencia . LLAVE_C ELSE LLAVE_A sentencia LLAVE_C ENDIF
   36   | IF condicion LLAVE_A sentencia . LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    LLAVE_C   desplazar e ir al estado 96
    VARIABLE  desplazar e ir al estado 8

    grammar  ir al estado 35
    dec_var  ir al estado 13
    asig     ir al estado 14
    between  ir al estado 15
    take     ir al estado 16
    write    ir al estado 17
    read     ir al estado 18
    while    ir al estado 19
    if       ir al estado 20


estado 75

   22 between: BETWEEN PARENTESIS_A VARIABLE COMA . CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C

    CORCHETE_A  desplazar e ir al estado 97


estado 76

   23 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA . CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   24     | TAKE PARENTESIS_A operador_algebraico PUNTO_COMA . CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C

    CONST_INT  desplazar e ir al estado 98


estado 77

   18 lista_var: lista_var COMA VARIABLE .

    $default  reduce usando la regla 18 (lista_var)


estado 78

   15 tipo_dato: INT .

    $default  reduce usando la regla 15 (tipo_dato)


estado 79

   16 tipo_dato: REAL .

    $default  reduce usando la regla 16 (tipo_dato)


estado 80

   17 tipo_dato: STRING .

    $default  reduce usando la regla 17 (tipo_dato)


estado 81

   14 declaraciones: lista_var DOS_PUNTOS tipo_dato .

    $default  reduce usando la regla 14 (declaraciones)


estado 82

   43 factor: PARENTESIS_A expresion PARENTESIS_C .

    $default  reduce usando la regla 43 (factor)


estado 83

   37 expresion: expresion . OP_SUMA termino
   38          | expresion . OP_RESTA termino
   51 cond_simple: expresion OP_MENOR expresion .

    OP_SUMA   desplazar e ir al estado 66
    OP_RESTA  desplazar e ir al estado 67

    $default  reduce usando la regla 51 (cond_simple)


estado 84

   37 expresion: expresion . OP_SUMA termino
   38          | expresion . OP_RESTA termino
   50 cond_simple: expresion OP_MAYOR expresion .

    OP_SUMA   desplazar e ir al estado 66
    OP_RESTA  desplazar e ir al estado 67

    $default  reduce usando la regla 50 (cond_simple)


estado 85

   37 expresion: expresion . OP_SUMA termino
   38          | expresion . OP_RESTA termino
   49 cond_simple: expresion OP_MEN_IGU expresion .

    OP_SUMA   desplazar e ir al estado 66
    OP_RESTA  desplazar e ir al estado 67

    $default  reduce usando la regla 49 (cond_simple)


estado 86

   37 expresion: expresion . OP_SUMA termino
   38          | expresion . OP_RESTA termino
   48 cond_simple: expresion OP_MAY_IGU expresion .

    OP_SUMA   desplazar e ir al estado 66
    OP_RESTA  desplazar e ir al estado 67

    $default  reduce usando la regla 48 (cond_simple)


estado 87

   37 expresion: expresion . OP_SUMA termino
   38          | expresion . OP_RESTA termino
   52 cond_simple: expresion OP_NOT expresion .

    OP_SUMA   desplazar e ir al estado 66
    OP_RESTA  desplazar e ir al estado 67

    $default  reduce usando la regla 52 (cond_simple)


estado 88

   37 expresion: expresion . OP_SUMA termino
   38          | expresion . OP_RESTA termino
   47 cond_simple: expresion OP_COMP expresion .

    OP_SUMA   desplazar e ir al estado 66
    OP_RESTA  desplazar e ir al estado 67

    $default  reduce usando la regla 47 (cond_simple)


estado 89

   37 expresion: expresion OP_SUMA termino .
   40 termino: termino . OP_MULT factor
   41        | termino . OP_DIV factor

    OP_DIV   desplazar e ir al estado 68
    OP_MULT  desplazar e ir al estado 69

    $default  reduce usando la regla 37 (expresion)


estado 90

   38 expresion: expresion OP_RESTA termino .
   40 termino: termino . OP_MULT factor
   41        | termino . OP_DIV factor

    OP_DIV   desplazar e ir al estado 68
    OP_MULT  desplazar e ir al estado 69

    $default  reduce usando la regla 38 (expresion)


estado 91

   41 termino: termino OP_DIV factor .

    $default  reduce usando la regla 41 (termino)


estado 92

   40 termino: termino OP_MULT factor .

    $default  reduce usando la regla 40 (termino)


estado 93

   54 condicion: PARENTESIS_A cond_simple OP_AND cond_simple . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 99


estado 94

   55 condicion: PARENTESIS_A cond_simple OP_OR cond_simple . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 100


estado 95

   33 while: WHILE condicion LLAVE_A sentencia LLAVE_C . ENDWHILE

    ENDWHILE  desplazar e ir al estado 101


estado 96

   34 if: IF condicion LLAVE_A sentencia LLAVE_C . ENDIF
   35   | IF condicion LLAVE_A sentencia LLAVE_C . ELSE LLAVE_A sentencia LLAVE_C ENDIF
   36   | IF condicion LLAVE_A sentencia LLAVE_C . ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF

    ELSE   desplazar e ir al estado 102
    ENDIF  desplazar e ir al estado 103


estado 97

   22 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A . expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    expresion  ir al estado 104
    termino    ir al estado 42
    factor     ir al estado 43


estado 98

   23 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT . PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   24     | TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT . PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C

    PUNTO_COMA  desplazar e ir al estado 105


estado 99

   54 condicion: PARENTESIS_A cond_simple OP_AND cond_simple PARENTESIS_C .

    $default  reduce usando la regla 54 (condicion)


estado 100

   55 condicion: PARENTESIS_A cond_simple OP_OR cond_simple PARENTESIS_C .

    $default  reduce usando la regla 55 (condicion)


estado 101

   33 while: WHILE condicion LLAVE_A sentencia LLAVE_C ENDWHILE .

    $default  reduce usando la regla 33 (while)


estado 102

   35 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE . LLAVE_A sentencia LLAVE_C ENDIF
   36   | IF condicion LLAVE_A sentencia LLAVE_C ELSE . condicion LLAVE_A sentencia LLAVE_C ENDIF

    LLAVE_A       desplazar e ir al estado 106
    PARENTESIS_A  desplazar e ir al estado 21

    condicion  ir al estado 107


estado 103

   34 if: IF condicion LLAVE_A sentencia LLAVE_C ENDIF .

    $default  reduce usando la regla 34 (if)


estado 104

   22 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expresion . PUNTO_COMA expresion CORCHETE_C PARENTESIS_C
   37 expresion: expresion . OP_SUMA termino
   38          | expresion . OP_RESTA termino

    PUNTO_COMA  desplazar e ir al estado 108
    OP_SUMA     desplazar e ir al estado 66
    OP_RESTA    desplazar e ir al estado 67


estado 105

   23 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA . CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   24     | TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA . CORCHETE_A CORCHETE_C PARENTESIS_C

    CORCHETE_A  desplazar e ir al estado 109


estado 106

   35 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE LLAVE_A . sentencia LLAVE_C ENDIF

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    VARIABLE  desplazar e ir al estado 8

    sentencia  ir al estado 110
    grammar    ir al estado 12
    dec_var    ir al estado 13
    asig       ir al estado 14
    between    ir al estado 15
    take       ir al estado 16
    write      ir al estado 17
    read       ir al estado 18
    while      ir al estado 19
    if         ir al estado 20


estado 107

   36 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE condicion . LLAVE_A sentencia LLAVE_C ENDIF

    LLAVE_A  desplazar e ir al estado 111


estado 108

   22 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expresion PUNTO_COMA . expresion CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 37
    CONST_INT     desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    VARIABLE      desplazar e ir al estado 40

    expresion  ir al estado 112
    termino    ir al estado 42
    factor     ir al estado 43


estado 109

   23 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A . lista_cte CORCHETE_C PARENTESIS_C
   24     | TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A . CORCHETE_C PARENTESIS_C

    CORCHETE_C  desplazar e ir al estado 113
    CONST_INT   desplazar e ir al estado 114
    CONST_REAL  desplazar e ir al estado 115

    lista_cte  ir al estado 116


estado 110

    3 sentencia: sentencia . grammar PUNTO_COMA
   35 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE LLAVE_A sentencia . LLAVE_C ENDIF

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    LLAVE_C   desplazar e ir al estado 117
    VARIABLE  desplazar e ir al estado 8

    grammar  ir al estado 35
    dec_var  ir al estado 13
    asig     ir al estado 14
    between  ir al estado 15
    take     ir al estado 16
    write    ir al estado 17
    read     ir al estado 18
    while    ir al estado 19
    if       ir al estado 20


estado 111

   36 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A . sentencia LLAVE_C ENDIF

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    VARIABLE  desplazar e ir al estado 8

    sentencia  ir al estado 118
    grammar    ir al estado 12
    dec_var    ir al estado 13
    asig       ir al estado 14
    between    ir al estado 15
    take       ir al estado 16
    write      ir al estado 17
    read       ir al estado 18
    while      ir al estado 19
    if         ir al estado 20


estado 112

   22 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expresion PUNTO_COMA expresion . CORCHETE_C PARENTESIS_C
   37 expresion: expresion . OP_SUMA termino
   38          | expresion . OP_RESTA termino

    CORCHETE_C  desplazar e ir al estado 119
    OP_SUMA     desplazar e ir al estado 66
    OP_RESTA    desplazar e ir al estado 67


estado 113

   24 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 120


estado 114

   25 lista_cte: CONST_INT .

    $default  reduce usando la regla 25 (lista_cte)


estado 115

   26 lista_cte: CONST_REAL .

    $default  reduce usando la regla 26 (lista_cte)


estado 116

   23 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte . CORCHETE_C PARENTESIS_C
   27 lista_cte: lista_cte . PUNTO_COMA CONST_INT
   28          | lista_cte . PUNTO_COMA CONST_REAL

    CORCHETE_C  desplazar e ir al estado 121
    PUNTO_COMA  desplazar e ir al estado 122


estado 117

   35 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE LLAVE_A sentencia LLAVE_C . ENDIF

    ENDIF  desplazar e ir al estado 123


estado 118

    3 sentencia: sentencia . grammar PUNTO_COMA
   36 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A sentencia . LLAVE_C ENDIF

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    LLAVE_C   desplazar e ir al estado 124
    VARIABLE  desplazar e ir al estado 8

    grammar  ir al estado 35
    dec_var  ir al estado 13
    asig     ir al estado 14
    between  ir al estado 15
    take     ir al estado 16
    write    ir al estado 17
    read     ir al estado 18
    while    ir al estado 19
    if       ir al estado 20


estado 119

   22 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 125


estado 120

   24 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C .

    $default  reduce usando la regla 24 (take)


estado 121

   23 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 126


estado 122

   27 lista_cte: lista_cte PUNTO_COMA . CONST_INT
   28          | lista_cte PUNTO_COMA . CONST_REAL

    CONST_INT   desplazar e ir al estado 127
    CONST_REAL  desplazar e ir al estado 128


estado 123

   35 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE LLAVE_A sentencia LLAVE_C ENDIF .

    $default  reduce usando la regla 35 (if)


estado 124

   36 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C . ENDIF

    ENDIF  desplazar e ir al estado 129


estado 125

   22 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C .

    $default  reduce usando la regla 22 (between)


estado 126

   23 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C .

    $default  reduce usando la regla 23 (take)


estado 127

   27 lista_cte: lista_cte PUNTO_COMA CONST_INT .

    $default  reduce usando la regla 27 (lista_cte)


estado 128

   28 lista_cte: lista_cte PUNTO_COMA CONST_REAL .

    $default  reduce usando la regla 28 (lista_cte)


estado 129

   36 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF .

    $default  reduce usando la regla 36 (if)
