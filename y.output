Terminals unused in grammar

   OP_IGUAL
   COMENTARIO_A
   COMENTARIO_C
   COMENTARIO
   .


Gramática

    0 $accept: programa $end

    1 programa: prog

    2 prog: sentencia

    3 sentencia: sentencia grammar PUNTO_COMA
    4          | grammar PUNTO_COMA

    5 grammar: dec_var
    6        | asig
    7        | if
    8        | while
    9        | between
   10        | take
   11        | write
   12        | read

   13 dec_var: DECVAR declaraciones ENDDEC

   14 declaraciones: lista_var DOS_PUNTOS tipo_dato
   15              | lista_var DOS_PUNTOS tipo_dato declaraciones

   16 lista_var: lista_var COMA VARIABLE
   17          | VARIABLE

   18 tipo_dato: INT
   19          | REAL
   20          | STRING

   21 asig: VARIABLE OP_ASIG expresion
   22     | VARIABLE OP_ASIG CONST_STRING

   23 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C

   24 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   25     | TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C

   26 lista_cte: CONST_INT
   27          | CONST_REAL
   28          | lista_cte PUNTO_COMA CONST_INT
   29          | lista_cte PUNTO_COMA CONST_REAL

   30 write: WRITE VARIABLE
   31      | WRITE CONST_STRING
   32      | WRITE CONST_INT

   33 read: READ VARIABLE

   34 $@1: /* vacío */

   35 $@2: /* vacío */

   36 while: WHILE $@1 condicion $@2 LLAVE_A sentencia LLAVE_C ENDWHILE

   37 if: IF condicion LLAVE_A sentencia LLAVE_C ENDIF
   38   | IF condicion LLAVE_A sentencia LLAVE_C ELSE LLAVE_A sentencia LLAVE_C ENDIF
   39   | IF condicion LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF

   40 expresion: expresion OP_SUMA termino
   41          | expresion OP_RESTA termino
   42          | termino

   43 termino: termino OP_MULT factor
   44        | termino OP_DIV factor
   45        | factor

   46 factor: PARENTESIS_A expresion PARENTESIS_C
   47       | CONST_INT
   48       | CONST_REAL
   49       | VARIABLE

   50 condicion: PARENTESIS_A cond_simple PARENTESIS_C
   51          | PARENTESIS_A cond_simple OP_AND cond_simple PARENTESIS_C
   52          | PARENTESIS_A cond_simple OP_OR cond_simple PARENTESIS_C

   53 $@3: /* vacío */

   54 cond_simple: expresion $@3 OP_COMP expresion

   55 $@4: /* vacío */

   56 cond_simple: expresion $@4 OP_MAY_IGU expresion

   57 $@5: /* vacío */

   58 cond_simple: expresion $@5 OP_MEN_IGU expresion

   59 $@6: /* vacío */

   60 cond_simple: expresion $@6 OP_MAYOR expresion

   61 $@7: /* vacío */

   62 cond_simple: expresion $@7 OP_MENOR expresion

   63 $@8: /* vacío */

   64 cond_simple: expresion $@8 OP_NOT expresion

   65 operador_algebraico: OP_SUMA
   66                    | OP_RESTA
   67                    | OP_DIV
   68                    | OP_MULT


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
WHILE (258) 36
ENDWHILE (259) 36
IF (260) 37 38 39
ELSE (261) 38 39
ENDIF (262) 37 38 39
WRITE (263) 30 31 32
READ (264) 33
BETWEEN (265) 23
TAKE (266) 24 25
DECVAR (267) 13
ENDDEC (268) 13
INT (269) 18
REAL (270) 19
STRING (271) 20
CORCHETE_A (272) 23 24 25
CORCHETE_C (273) 23 24 25
LLAVE_A (274) 36 37 38 39
LLAVE_C (275) 36 37 38 39
PARENTESIS_A (276) 23 24 25 46 50 51 52
PARENTESIS_C (277) 23 24 25 46 50 51 52
COMA (278) 16 23
PUNTO_COMA (279) 3 4 23 24 25 28 29
DOS_PUNTOS (280) 14 15
OP_MENOR (281) 62
OP_MAYOR (282) 60
OP_MEN_IGU (283) 58
OP_MAY_IGU (284) 56
OP_NOT (285) 64
OP_AND (286) 51
OP_OR (287) 52
OP_COMP (288) 54
OP_IGUAL (289)
CONST_INT (290) 24 25 26 28 32 47
CONST_REAL (291) 27 29 48
CONST_STRING (292) 22 31
VARIABLE (293) 16 17 21 22 23 30 33 49
COMENTARIO_A (294)
COMENTARIO_C (295)
COMENTARIO (296)
. (297)
OP_SUMA (298) 40 65
OP_RESTA (299) 41 66
OP_DIV (300) 44 67
OP_MULT (301) 43 68
OP_ASIG (302) 21 22


No terminales con las reglas donde aparecen

$accept (48)
    en la izquierda: 0
programa (49)
    en la izquierda: 1, en la derecha: 0
prog (50)
    en la izquierda: 2, en la derecha: 1
sentencia (51)
    en la izquierda: 3 4, en la derecha: 2 3 36 37 38 39
grammar (52)
    en la izquierda: 5 6 7 8 9 10 11 12, en la derecha: 3 4
dec_var (53)
    en la izquierda: 13, en la derecha: 5
declaraciones (54)
    en la izquierda: 14 15, en la derecha: 13 15
lista_var (55)
    en la izquierda: 16 17, en la derecha: 14 15 16
tipo_dato (56)
    en la izquierda: 18 19 20, en la derecha: 14 15
asig (57)
    en la izquierda: 21 22, en la derecha: 6
between (58)
    en la izquierda: 23, en la derecha: 9
take (59)
    en la izquierda: 24 25, en la derecha: 10
lista_cte (60)
    en la izquierda: 26 27 28 29, en la derecha: 24 28 29
write (61)
    en la izquierda: 30 31 32, en la derecha: 11
read (62)
    en la izquierda: 33, en la derecha: 12
while (63)
    en la izquierda: 36, en la derecha: 8
$@1 (64)
    en la izquierda: 34, en la derecha: 36
$@2 (65)
    en la izquierda: 35, en la derecha: 36
if (66)
    en la izquierda: 37 38 39, en la derecha: 7
expresion (67)
    en la izquierda: 40 41 42, en la derecha: 21 23 40 41 46 54 56
    58 60 62 64
termino (68)
    en la izquierda: 43 44 45, en la derecha: 40 41 42 43 44
factor (69)
    en la izquierda: 46 47 48 49, en la derecha: 43 44 45
condicion (70)
    en la izquierda: 50 51 52, en la derecha: 36 37 38 39
cond_simple (71)
    en la izquierda: 54 56 58 60 62 64, en la derecha: 50 51 52
$@3 (72)
    en la izquierda: 53, en la derecha: 54
$@4 (73)
    en la izquierda: 55, en la derecha: 56
$@5 (74)
    en la izquierda: 57, en la derecha: 58
$@6 (75)
    en la izquierda: 59, en la derecha: 60
$@7 (76)
    en la izquierda: 61, en la derecha: 62
$@8 (77)
    en la izquierda: 63, en la derecha: 64
operador_algebraico (78)
    en la izquierda: 65 66 67 68, en la derecha: 24 25


estado 0

    0 $accept: . programa $end

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    VARIABLE  desplazar e ir al estado 8

    programa   ir al estado 9
    prog       ir al estado 10
    sentencia  ir al estado 11
    grammar    ir al estado 12
    dec_var    ir al estado 13
    asig       ir al estado 14
    between    ir al estado 15
    take       ir al estado 16
    write      ir al estado 17
    read       ir al estado 18
    while      ir al estado 19
    if         ir al estado 20


estado 1

   36 while: WHILE . $@1 condicion $@2 LLAVE_A sentencia LLAVE_C ENDWHILE

    $default  reduce usando la regla 34 ($@1)

    $@1  ir al estado 21


estado 2

   37 if: IF . condicion LLAVE_A sentencia LLAVE_C ENDIF
   38   | IF . condicion LLAVE_A sentencia LLAVE_C ELSE LLAVE_A sentencia LLAVE_C ENDIF
   39   | IF . condicion LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF

    PARENTESIS_A  desplazar e ir al estado 22

    condicion  ir al estado 23


estado 3

   30 write: WRITE . VARIABLE
   31      | WRITE . CONST_STRING
   32      | WRITE . CONST_INT

    CONST_INT     desplazar e ir al estado 24
    CONST_STRING  desplazar e ir al estado 25
    VARIABLE      desplazar e ir al estado 26


estado 4

   33 read: READ . VARIABLE

    VARIABLE  desplazar e ir al estado 27


estado 5

   23 between: BETWEEN . PARENTESIS_A VARIABLE COMA CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 28


estado 6

   24 take: TAKE . PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   25     | TAKE . PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 29


estado 7

   13 dec_var: DECVAR . declaraciones ENDDEC

    VARIABLE  desplazar e ir al estado 30

    declaraciones  ir al estado 31
    lista_var      ir al estado 32


estado 8

   21 asig: VARIABLE . OP_ASIG expresion
   22     | VARIABLE . OP_ASIG CONST_STRING

    OP_ASIG  desplazar e ir al estado 33


estado 9

    0 $accept: programa . $end

    $end  desplazar e ir al estado 34


estado 10

    1 programa: prog .

    $default  reduce usando la regla 1 (programa)


estado 11

    2 prog: sentencia .
    3 sentencia: sentencia . grammar PUNTO_COMA

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    VARIABLE  desplazar e ir al estado 8

    $default  reduce usando la regla 2 (prog)

    grammar  ir al estado 35
    dec_var  ir al estado 13
    asig     ir al estado 14
    between  ir al estado 15
    take     ir al estado 16
    write    ir al estado 17
    read     ir al estado 18
    while    ir al estado 19
    if       ir al estado 20


estado 12

    4 sentencia: grammar . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 36


estado 13

    5 grammar: dec_var .

    $default  reduce usando la regla 5 (grammar)


estado 14

    6 grammar: asig .

    $default  reduce usando la regla 6 (grammar)


estado 15

    9 grammar: between .

    $default  reduce usando la regla 9 (grammar)


estado 16

   10 grammar: take .

    $default  reduce usando la regla 10 (grammar)


estado 17

   11 grammar: write .

    $default  reduce usando la regla 11 (grammar)


estado 18

   12 grammar: read .

    $default  reduce usando la regla 12 (grammar)


estado 19

    8 grammar: while .

    $default  reduce usando la regla 8 (grammar)


estado 20

    7 grammar: if .

    $default  reduce usando la regla 7 (grammar)


estado 21

   36 while: WHILE $@1 . condicion $@2 LLAVE_A sentencia LLAVE_C ENDWHILE

    PARENTESIS_A  desplazar e ir al estado 22

    condicion  ir al estado 37


estado 22

   50 condicion: PARENTESIS_A . cond_simple PARENTESIS_C
   51          | PARENTESIS_A . cond_simple OP_AND cond_simple PARENTESIS_C
   52          | PARENTESIS_A . cond_simple OP_OR cond_simple PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    expresion    ir al estado 42
    termino      ir al estado 43
    factor       ir al estado 44
    cond_simple  ir al estado 45


estado 23

   37 if: IF condicion . LLAVE_A sentencia LLAVE_C ENDIF
   38   | IF condicion . LLAVE_A sentencia LLAVE_C ELSE LLAVE_A sentencia LLAVE_C ENDIF
   39   | IF condicion . LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF

    LLAVE_A  desplazar e ir al estado 46


estado 24

   32 write: WRITE CONST_INT .

    $default  reduce usando la regla 32 (write)


estado 25

   31 write: WRITE CONST_STRING .

    $default  reduce usando la regla 31 (write)


estado 26

   30 write: WRITE VARIABLE .

    $default  reduce usando la regla 30 (write)


estado 27

   33 read: READ VARIABLE .

    $default  reduce usando la regla 33 (read)


estado 28

   23 between: BETWEEN PARENTESIS_A . VARIABLE COMA CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C

    VARIABLE  desplazar e ir al estado 47


estado 29

   24 take: TAKE PARENTESIS_A . operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   25     | TAKE PARENTESIS_A . operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C

    OP_SUMA   desplazar e ir al estado 48
    OP_RESTA  desplazar e ir al estado 49
    OP_DIV    desplazar e ir al estado 50
    OP_MULT   desplazar e ir al estado 51

    operador_algebraico  ir al estado 52


estado 30

   17 lista_var: VARIABLE .

    $default  reduce usando la regla 17 (lista_var)


estado 31

   13 dec_var: DECVAR declaraciones . ENDDEC

    ENDDEC  desplazar e ir al estado 53


estado 32

   14 declaraciones: lista_var . DOS_PUNTOS tipo_dato
   15              | lista_var . DOS_PUNTOS tipo_dato declaraciones
   16 lista_var: lista_var . COMA VARIABLE

    COMA        desplazar e ir al estado 54
    DOS_PUNTOS  desplazar e ir al estado 55


estado 33

   21 asig: VARIABLE OP_ASIG . expresion
   22     | VARIABLE OP_ASIG . CONST_STRING

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    CONST_STRING  desplazar e ir al estado 56
    VARIABLE      desplazar e ir al estado 41

    expresion  ir al estado 57
    termino    ir al estado 43
    factor     ir al estado 44


estado 34

    0 $accept: programa $end .

    $default  aceptar


estado 35

    3 sentencia: sentencia grammar . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 58


estado 36

    4 sentencia: grammar PUNTO_COMA .

    $default  reduce usando la regla 4 (sentencia)


estado 37

   36 while: WHILE $@1 condicion . $@2 LLAVE_A sentencia LLAVE_C ENDWHILE

    $default  reduce usando la regla 35 ($@2)

    $@2  ir al estado 59


estado 38

   46 factor: PARENTESIS_A . expresion PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    expresion  ir al estado 60
    termino    ir al estado 43
    factor     ir al estado 44


estado 39

   47 factor: CONST_INT .

    $default  reduce usando la regla 47 (factor)


estado 40

   48 factor: CONST_REAL .

    $default  reduce usando la regla 48 (factor)


estado 41

   49 factor: VARIABLE .

    $default  reduce usando la regla 49 (factor)


estado 42

   40 expresion: expresion . OP_SUMA termino
   41          | expresion . OP_RESTA termino
   54 cond_simple: expresion . $@3 OP_COMP expresion
   56            | expresion . $@4 OP_MAY_IGU expresion
   58            | expresion . $@5 OP_MEN_IGU expresion
   60            | expresion . $@6 OP_MAYOR expresion
   62            | expresion . $@7 OP_MENOR expresion
   64            | expresion . $@8 OP_NOT expresion

    OP_SUMA   desplazar e ir al estado 61
    OP_RESTA  desplazar e ir al estado 62

    OP_MENOR    reduce usando la regla 61 ($@7)
    OP_MAYOR    reduce usando la regla 59 ($@6)
    OP_MEN_IGU  reduce usando la regla 57 ($@5)
    OP_MAY_IGU  reduce usando la regla 55 ($@4)
    OP_NOT      reduce usando la regla 63 ($@8)
    $default    reduce usando la regla 53 ($@3)

    $@3  ir al estado 63
    $@4  ir al estado 64
    $@5  ir al estado 65
    $@6  ir al estado 66
    $@7  ir al estado 67
    $@8  ir al estado 68


estado 43

   42 expresion: termino .
   43 termino: termino . OP_MULT factor
   44        | termino . OP_DIV factor

    OP_DIV   desplazar e ir al estado 69
    OP_MULT  desplazar e ir al estado 70

    $default  reduce usando la regla 42 (expresion)


estado 44

   45 termino: factor .

    $default  reduce usando la regla 45 (termino)


estado 45

   50 condicion: PARENTESIS_A cond_simple . PARENTESIS_C
   51          | PARENTESIS_A cond_simple . OP_AND cond_simple PARENTESIS_C
   52          | PARENTESIS_A cond_simple . OP_OR cond_simple PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 71
    OP_AND        desplazar e ir al estado 72
    OP_OR         desplazar e ir al estado 73


estado 46

   37 if: IF condicion LLAVE_A . sentencia LLAVE_C ENDIF
   38   | IF condicion LLAVE_A . sentencia LLAVE_C ELSE LLAVE_A sentencia LLAVE_C ENDIF
   39   | IF condicion LLAVE_A . sentencia LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    VARIABLE  desplazar e ir al estado 8

    sentencia  ir al estado 74
    grammar    ir al estado 12
    dec_var    ir al estado 13
    asig       ir al estado 14
    between    ir al estado 15
    take       ir al estado 16
    write      ir al estado 17
    read       ir al estado 18
    while      ir al estado 19
    if         ir al estado 20


estado 47

   23 between: BETWEEN PARENTESIS_A VARIABLE . COMA CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C

    COMA  desplazar e ir al estado 75


estado 48

   65 operador_algebraico: OP_SUMA .

    $default  reduce usando la regla 65 (operador_algebraico)


estado 49

   66 operador_algebraico: OP_RESTA .

    $default  reduce usando la regla 66 (operador_algebraico)


estado 50

   67 operador_algebraico: OP_DIV .

    $default  reduce usando la regla 67 (operador_algebraico)


estado 51

   68 operador_algebraico: OP_MULT .

    $default  reduce usando la regla 68 (operador_algebraico)


estado 52

   24 take: TAKE PARENTESIS_A operador_algebraico . PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   25     | TAKE PARENTESIS_A operador_algebraico . PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C

    PUNTO_COMA  desplazar e ir al estado 76


estado 53

   13 dec_var: DECVAR declaraciones ENDDEC .

    $default  reduce usando la regla 13 (dec_var)


estado 54

   16 lista_var: lista_var COMA . VARIABLE

    VARIABLE  desplazar e ir al estado 77


estado 55

   14 declaraciones: lista_var DOS_PUNTOS . tipo_dato
   15              | lista_var DOS_PUNTOS . tipo_dato declaraciones

    INT     desplazar e ir al estado 78
    REAL    desplazar e ir al estado 79
    STRING  desplazar e ir al estado 80

    tipo_dato  ir al estado 81


estado 56

   22 asig: VARIABLE OP_ASIG CONST_STRING .

    $default  reduce usando la regla 22 (asig)


estado 57

   21 asig: VARIABLE OP_ASIG expresion .
   40 expresion: expresion . OP_SUMA termino
   41          | expresion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 61
    OP_RESTA  desplazar e ir al estado 62

    $default  reduce usando la regla 21 (asig)


estado 58

    3 sentencia: sentencia grammar PUNTO_COMA .

    $default  reduce usando la regla 3 (sentencia)


estado 59

   36 while: WHILE $@1 condicion $@2 . LLAVE_A sentencia LLAVE_C ENDWHILE

    LLAVE_A  desplazar e ir al estado 82


estado 60

   40 expresion: expresion . OP_SUMA termino
   41          | expresion . OP_RESTA termino
   46 factor: PARENTESIS_A expresion . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 83
    OP_SUMA       desplazar e ir al estado 61
    OP_RESTA      desplazar e ir al estado 62


estado 61

   40 expresion: expresion OP_SUMA . termino

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    termino  ir al estado 84
    factor   ir al estado 44


estado 62

   41 expresion: expresion OP_RESTA . termino

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    termino  ir al estado 85
    factor   ir al estado 44


estado 63

   54 cond_simple: expresion $@3 . OP_COMP expresion

    OP_COMP  desplazar e ir al estado 86


estado 64

   56 cond_simple: expresion $@4 . OP_MAY_IGU expresion

    OP_MAY_IGU  desplazar e ir al estado 87


estado 65

   58 cond_simple: expresion $@5 . OP_MEN_IGU expresion

    OP_MEN_IGU  desplazar e ir al estado 88


estado 66

   60 cond_simple: expresion $@6 . OP_MAYOR expresion

    OP_MAYOR  desplazar e ir al estado 89


estado 67

   62 cond_simple: expresion $@7 . OP_MENOR expresion

    OP_MENOR  desplazar e ir al estado 90


estado 68

   64 cond_simple: expresion $@8 . OP_NOT expresion

    OP_NOT  desplazar e ir al estado 91


estado 69

   44 termino: termino OP_DIV . factor

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    factor  ir al estado 92


estado 70

   43 termino: termino OP_MULT . factor

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    factor  ir al estado 93


estado 71

   50 condicion: PARENTESIS_A cond_simple PARENTESIS_C .

    $default  reduce usando la regla 50 (condicion)


estado 72

   51 condicion: PARENTESIS_A cond_simple OP_AND . cond_simple PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    expresion    ir al estado 42
    termino      ir al estado 43
    factor       ir al estado 44
    cond_simple  ir al estado 94


estado 73

   52 condicion: PARENTESIS_A cond_simple OP_OR . cond_simple PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    expresion    ir al estado 42
    termino      ir al estado 43
    factor       ir al estado 44
    cond_simple  ir al estado 95


estado 74

    3 sentencia: sentencia . grammar PUNTO_COMA
   37 if: IF condicion LLAVE_A sentencia . LLAVE_C ENDIF
   38   | IF condicion LLAVE_A sentencia . LLAVE_C ELSE LLAVE_A sentencia LLAVE_C ENDIF
   39   | IF condicion LLAVE_A sentencia . LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    LLAVE_C   desplazar e ir al estado 96
    VARIABLE  desplazar e ir al estado 8

    grammar  ir al estado 35
    dec_var  ir al estado 13
    asig     ir al estado 14
    between  ir al estado 15
    take     ir al estado 16
    write    ir al estado 17
    read     ir al estado 18
    while    ir al estado 19
    if       ir al estado 20


estado 75

   23 between: BETWEEN PARENTESIS_A VARIABLE COMA . CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C

    CORCHETE_A  desplazar e ir al estado 97


estado 76

   24 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA . CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   25     | TAKE PARENTESIS_A operador_algebraico PUNTO_COMA . CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C

    CONST_INT  desplazar e ir al estado 98


estado 77

   16 lista_var: lista_var COMA VARIABLE .

    $default  reduce usando la regla 16 (lista_var)


estado 78

   18 tipo_dato: INT .

    $default  reduce usando la regla 18 (tipo_dato)


estado 79

   19 tipo_dato: REAL .

    $default  reduce usando la regla 19 (tipo_dato)


estado 80

   20 tipo_dato: STRING .

    $default  reduce usando la regla 20 (tipo_dato)


estado 81

   14 declaraciones: lista_var DOS_PUNTOS tipo_dato .
   15              | lista_var DOS_PUNTOS tipo_dato . declaraciones

    VARIABLE  desplazar e ir al estado 30

    $default  reduce usando la regla 14 (declaraciones)

    declaraciones  ir al estado 99
    lista_var      ir al estado 32


estado 82

   36 while: WHILE $@1 condicion $@2 LLAVE_A . sentencia LLAVE_C ENDWHILE

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    VARIABLE  desplazar e ir al estado 8

    sentencia  ir al estado 100
    grammar    ir al estado 12
    dec_var    ir al estado 13
    asig       ir al estado 14
    between    ir al estado 15
    take       ir al estado 16
    write      ir al estado 17
    read       ir al estado 18
    while      ir al estado 19
    if         ir al estado 20


estado 83

   46 factor: PARENTESIS_A expresion PARENTESIS_C .

    $default  reduce usando la regla 46 (factor)


estado 84

   40 expresion: expresion OP_SUMA termino .
   43 termino: termino . OP_MULT factor
   44        | termino . OP_DIV factor

    OP_DIV   desplazar e ir al estado 69
    OP_MULT  desplazar e ir al estado 70

    $default  reduce usando la regla 40 (expresion)


estado 85

   41 expresion: expresion OP_RESTA termino .
   43 termino: termino . OP_MULT factor
   44        | termino . OP_DIV factor

    OP_DIV   desplazar e ir al estado 69
    OP_MULT  desplazar e ir al estado 70

    $default  reduce usando la regla 41 (expresion)


estado 86

   54 cond_simple: expresion $@3 OP_COMP . expresion

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    expresion  ir al estado 101
    termino    ir al estado 43
    factor     ir al estado 44


estado 87

   56 cond_simple: expresion $@4 OP_MAY_IGU . expresion

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    expresion  ir al estado 102
    termino    ir al estado 43
    factor     ir al estado 44


estado 88

   58 cond_simple: expresion $@5 OP_MEN_IGU . expresion

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    expresion  ir al estado 103
    termino    ir al estado 43
    factor     ir al estado 44


estado 89

   60 cond_simple: expresion $@6 OP_MAYOR . expresion

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    expresion  ir al estado 104
    termino    ir al estado 43
    factor     ir al estado 44


estado 90

   62 cond_simple: expresion $@7 OP_MENOR . expresion

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    expresion  ir al estado 105
    termino    ir al estado 43
    factor     ir al estado 44


estado 91

   64 cond_simple: expresion $@8 OP_NOT . expresion

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    expresion  ir al estado 106
    termino    ir al estado 43
    factor     ir al estado 44


estado 92

   44 termino: termino OP_DIV factor .

    $default  reduce usando la regla 44 (termino)


estado 93

   43 termino: termino OP_MULT factor .

    $default  reduce usando la regla 43 (termino)


estado 94

   51 condicion: PARENTESIS_A cond_simple OP_AND cond_simple . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 107


estado 95

   52 condicion: PARENTESIS_A cond_simple OP_OR cond_simple . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 108


estado 96

   37 if: IF condicion LLAVE_A sentencia LLAVE_C . ENDIF
   38   | IF condicion LLAVE_A sentencia LLAVE_C . ELSE LLAVE_A sentencia LLAVE_C ENDIF
   39   | IF condicion LLAVE_A sentencia LLAVE_C . ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF

    ELSE   desplazar e ir al estado 109
    ENDIF  desplazar e ir al estado 110


estado 97

   23 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A . expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    expresion  ir al estado 111
    termino    ir al estado 43
    factor     ir al estado 44


estado 98

   24 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT . PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   25     | TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT . PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C

    PUNTO_COMA  desplazar e ir al estado 112


estado 99

   15 declaraciones: lista_var DOS_PUNTOS tipo_dato declaraciones .

    $default  reduce usando la regla 15 (declaraciones)


estado 100

    3 sentencia: sentencia . grammar PUNTO_COMA
   36 while: WHILE $@1 condicion $@2 LLAVE_A sentencia . LLAVE_C ENDWHILE

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    LLAVE_C   desplazar e ir al estado 113
    VARIABLE  desplazar e ir al estado 8

    grammar  ir al estado 35
    dec_var  ir al estado 13
    asig     ir al estado 14
    between  ir al estado 15
    take     ir al estado 16
    write    ir al estado 17
    read     ir al estado 18
    while    ir al estado 19
    if       ir al estado 20


estado 101

   40 expresion: expresion . OP_SUMA termino
   41          | expresion . OP_RESTA termino
   54 cond_simple: expresion $@3 OP_COMP expresion .

    OP_SUMA   desplazar e ir al estado 61
    OP_RESTA  desplazar e ir al estado 62

    $default  reduce usando la regla 54 (cond_simple)


estado 102

   40 expresion: expresion . OP_SUMA termino
   41          | expresion . OP_RESTA termino
   56 cond_simple: expresion $@4 OP_MAY_IGU expresion .

    OP_SUMA   desplazar e ir al estado 61
    OP_RESTA  desplazar e ir al estado 62

    $default  reduce usando la regla 56 (cond_simple)


estado 103

   40 expresion: expresion . OP_SUMA termino
   41          | expresion . OP_RESTA termino
   58 cond_simple: expresion $@5 OP_MEN_IGU expresion .

    OP_SUMA   desplazar e ir al estado 61
    OP_RESTA  desplazar e ir al estado 62

    $default  reduce usando la regla 58 (cond_simple)


estado 104

   40 expresion: expresion . OP_SUMA termino
   41          | expresion . OP_RESTA termino
   60 cond_simple: expresion $@6 OP_MAYOR expresion .

    OP_SUMA   desplazar e ir al estado 61
    OP_RESTA  desplazar e ir al estado 62

    $default  reduce usando la regla 60 (cond_simple)


estado 105

   40 expresion: expresion . OP_SUMA termino
   41          | expresion . OP_RESTA termino
   62 cond_simple: expresion $@7 OP_MENOR expresion .

    OP_SUMA   desplazar e ir al estado 61
    OP_RESTA  desplazar e ir al estado 62

    $default  reduce usando la regla 62 (cond_simple)


estado 106

   40 expresion: expresion . OP_SUMA termino
   41          | expresion . OP_RESTA termino
   64 cond_simple: expresion $@8 OP_NOT expresion .

    OP_SUMA   desplazar e ir al estado 61
    OP_RESTA  desplazar e ir al estado 62

    $default  reduce usando la regla 64 (cond_simple)


estado 107

   51 condicion: PARENTESIS_A cond_simple OP_AND cond_simple PARENTESIS_C .

    $default  reduce usando la regla 51 (condicion)


estado 108

   52 condicion: PARENTESIS_A cond_simple OP_OR cond_simple PARENTESIS_C .

    $default  reduce usando la regla 52 (condicion)


estado 109

   38 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE . LLAVE_A sentencia LLAVE_C ENDIF
   39   | IF condicion LLAVE_A sentencia LLAVE_C ELSE . condicion LLAVE_A sentencia LLAVE_C ENDIF

    LLAVE_A       desplazar e ir al estado 114
    PARENTESIS_A  desplazar e ir al estado 22

    condicion  ir al estado 115


estado 110

   37 if: IF condicion LLAVE_A sentencia LLAVE_C ENDIF .

    $default  reduce usando la regla 37 (if)


estado 111

   23 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expresion . PUNTO_COMA expresion CORCHETE_C PARENTESIS_C
   40 expresion: expresion . OP_SUMA termino
   41          | expresion . OP_RESTA termino

    PUNTO_COMA  desplazar e ir al estado 116
    OP_SUMA     desplazar e ir al estado 61
    OP_RESTA    desplazar e ir al estado 62


estado 112

   24 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA . CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C
   25     | TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA . CORCHETE_A CORCHETE_C PARENTESIS_C

    CORCHETE_A  desplazar e ir al estado 117


estado 113

   36 while: WHILE $@1 condicion $@2 LLAVE_A sentencia LLAVE_C . ENDWHILE

    ENDWHILE  desplazar e ir al estado 118


estado 114

   38 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE LLAVE_A . sentencia LLAVE_C ENDIF

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    VARIABLE  desplazar e ir al estado 8

    sentencia  ir al estado 119
    grammar    ir al estado 12
    dec_var    ir al estado 13
    asig       ir al estado 14
    between    ir al estado 15
    take       ir al estado 16
    write      ir al estado 17
    read       ir al estado 18
    while      ir al estado 19
    if         ir al estado 20


estado 115

   39 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE condicion . LLAVE_A sentencia LLAVE_C ENDIF

    LLAVE_A  desplazar e ir al estado 120


estado 116

   23 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expresion PUNTO_COMA . expresion CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 38
    CONST_INT     desplazar e ir al estado 39
    CONST_REAL    desplazar e ir al estado 40
    VARIABLE      desplazar e ir al estado 41

    expresion  ir al estado 121
    termino    ir al estado 43
    factor     ir al estado 44


estado 117

   24 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A . lista_cte CORCHETE_C PARENTESIS_C
   25     | TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A . CORCHETE_C PARENTESIS_C

    CORCHETE_C  desplazar e ir al estado 122
    CONST_INT   desplazar e ir al estado 123
    CONST_REAL  desplazar e ir al estado 124

    lista_cte  ir al estado 125


estado 118

   36 while: WHILE $@1 condicion $@2 LLAVE_A sentencia LLAVE_C ENDWHILE .

    $default  reduce usando la regla 36 (while)


estado 119

    3 sentencia: sentencia . grammar PUNTO_COMA
   38 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE LLAVE_A sentencia . LLAVE_C ENDIF

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    LLAVE_C   desplazar e ir al estado 126
    VARIABLE  desplazar e ir al estado 8

    grammar  ir al estado 35
    dec_var  ir al estado 13
    asig     ir al estado 14
    between  ir al estado 15
    take     ir al estado 16
    write    ir al estado 17
    read     ir al estado 18
    while    ir al estado 19
    if       ir al estado 20


estado 120

   39 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A . sentencia LLAVE_C ENDIF

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    VARIABLE  desplazar e ir al estado 8

    sentencia  ir al estado 127
    grammar    ir al estado 12
    dec_var    ir al estado 13
    asig       ir al estado 14
    between    ir al estado 15
    take       ir al estado 16
    write      ir al estado 17
    read       ir al estado 18
    while      ir al estado 19
    if         ir al estado 20


estado 121

   23 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expresion PUNTO_COMA expresion . CORCHETE_C PARENTESIS_C
   40 expresion: expresion . OP_SUMA termino
   41          | expresion . OP_RESTA termino

    CORCHETE_C  desplazar e ir al estado 128
    OP_SUMA     desplazar e ir al estado 61
    OP_RESTA    desplazar e ir al estado 62


estado 122

   25 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 129


estado 123

   26 lista_cte: CONST_INT .

    $default  reduce usando la regla 26 (lista_cte)


estado 124

   27 lista_cte: CONST_REAL .

    $default  reduce usando la regla 27 (lista_cte)


estado 125

   24 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte . CORCHETE_C PARENTESIS_C
   28 lista_cte: lista_cte . PUNTO_COMA CONST_INT
   29          | lista_cte . PUNTO_COMA CONST_REAL

    CORCHETE_C  desplazar e ir al estado 130
    PUNTO_COMA  desplazar e ir al estado 131


estado 126

   38 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE LLAVE_A sentencia LLAVE_C . ENDIF

    ENDIF  desplazar e ir al estado 132


estado 127

    3 sentencia: sentencia . grammar PUNTO_COMA
   39 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A sentencia . LLAVE_C ENDIF

    WHILE     desplazar e ir al estado 1
    IF        desplazar e ir al estado 2
    WRITE     desplazar e ir al estado 3
    READ      desplazar e ir al estado 4
    BETWEEN   desplazar e ir al estado 5
    TAKE      desplazar e ir al estado 6
    DECVAR    desplazar e ir al estado 7
    LLAVE_C   desplazar e ir al estado 133
    VARIABLE  desplazar e ir al estado 8

    grammar  ir al estado 35
    dec_var  ir al estado 13
    asig     ir al estado 14
    between  ir al estado 15
    take     ir al estado 16
    write    ir al estado 17
    read     ir al estado 18
    while    ir al estado 19
    if       ir al estado 20


estado 128

   23 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 134


estado 129

   25 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A CORCHETE_C PARENTESIS_C .

    $default  reduce usando la regla 25 (take)


estado 130

   24 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 135


estado 131

   28 lista_cte: lista_cte PUNTO_COMA . CONST_INT
   29          | lista_cte PUNTO_COMA . CONST_REAL

    CONST_INT   desplazar e ir al estado 136
    CONST_REAL  desplazar e ir al estado 137


estado 132

   38 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE LLAVE_A sentencia LLAVE_C ENDIF .

    $default  reduce usando la regla 38 (if)


estado 133

   39 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C . ENDIF

    ENDIF  desplazar e ir al estado 138


estado 134

   23 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expresion PUNTO_COMA expresion CORCHETE_C PARENTESIS_C .

    $default  reduce usando la regla 23 (between)


estado 135

   24 take: TAKE PARENTESIS_A operador_algebraico PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C .

    $default  reduce usando la regla 24 (take)


estado 136

   28 lista_cte: lista_cte PUNTO_COMA CONST_INT .

    $default  reduce usando la regla 28 (lista_cte)


estado 137

   29 lista_cte: lista_cte PUNTO_COMA CONST_REAL .

    $default  reduce usando la regla 29 (lista_cte)


estado 138

   39 if: IF condicion LLAVE_A sentencia LLAVE_C ELSE condicion LLAVE_A sentencia LLAVE_C ENDIF .

    $default  reduce usando la regla 39 (if)
