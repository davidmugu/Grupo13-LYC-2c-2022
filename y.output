Nonterminals useless in grammar

   lista
   expr_list
   tipo


Terminals unused in grammar

   INT
   REAL
   STRING
   DECVAR
   ENDDEC
   COMENTARIO_A
   COMENTARIO_C
   COMENTARIO
   .


Rules useless in grammar

   71 lista: expr_list
   72      | lista COMA expr_list

   73 expr_list: CONST_INT
   74          | CONST_REAL
   75          | CONST_STRING
   76          | VARIABLE

   77 tipo: INT
   78     | REAL
   79     | STRING


Rules useless in parser due to conflicts

   63 operador: OP_MULT


Estado 54 conflictos: 1 reducción(ones)/reducción(ones)


Gramática

    0 $accept: programa $end

    1 programa: prog

    2 prog: sentencia

    3 sentencia: sentencia grammar PUNTO_COMA
    4          | grammar PUNTO_COMA

    5 grammar: asig
    6        | if
    7        | while
    8        | between
    9        | take
   10        | write
   11        | read

   12 asig: VARIABLE OP_ASIG expr
   13     | VARIABLE OP_ASIG CONST_STRING_R

   14 CONST_STRING_R: CONST_STRING

   15 NUMERO: CONST_INT
   16       | CONST_REAL

   17 expr: expr OP_SUMA termino
   18     | expr OP_RESTA termino
   19     | termino

   20 termino: termino OP_MULT factor
   21        | termino OP_DIV factor
   22        | '-' termino
   23        | factor

   24 factor: PARENTESIS_A expr PARENTESIS_C
   25       | NUMERO
   26       | VARIABLE

   27 $@1: /* vacío */

   28 while: WHILE cond_completa $@1 while_exp ENDWHILE

   29 while_exp: sentencia

   30 $@2: /* vacío */

   31 if: IF cond_completa sentencia $@2 ENDIF
   32   | IF cond_completa sentencia ELSE sentencia ENDIF

   33 $@3: /* vacío */

   34 $@4: /* vacío */

   35 if: IF cond_completa $@3 ELSE $@4 ENDIF

   36 $@5: /* vacío */

   37 if: IF cond_completa $@5 ENDIF

   38 cond_completa: PARENTESIS_A cond_completa PARENTESIS_C
   39              | PARENTESIS_A cond_completa OP_OR cond_completa PARENTESIS_C
   40              | PARENTESIS_A cond_completa OP_AND cond_completa PARENTESIS_C
   41              | PARENTESIS_A cond_completa OP_OR cond PARENTESIS_C
   42              | PARENTESIS_A cond_completa OP_AND cond PARENTESIS_C
   43              | OP_NOT cond_completa
   44              | PARENTESIS_A cond OP_OR cond_completa PARENTESIS_C
   45              | PARENTESIS_A cond OP_AND cond_completa PARENTESIS_C
   46              | PARENTESIS_A cond OP_AND cond PARENTESIS_C
   47              | PARENTESIS_A cond OP_OR cond PARENTESIS_C
   48              | PARENTESIS_A cond PARENTESIS_C

   49 cond: expr OP_COMP expr
   50     | expr OP_MAY_IGU expr
   51     | expr OP_MEN_IGU expr
   52     | expr OP_MENOR expr
   53     | expr OP_MAYOR expr
   54     | expr OP_AND expr
   55     | expr OP_OR expr
   56     | expr OP_NOT termino
   57     | OP_NOT VARIABLE

   58 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expr PUNTO_COMA expr CORCHETE_C PARENTESIS_C

   59 take: TAKE PARENTESIS_A operador PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C

   60 operador: OP_SUMA
   61         | OP_RESTA
   62         | OP_MULT
   63         | OP_MULT

   64 lista_cte: expr_cte
   65          | lista_cte COMA expr_cte

   66 expr_cte: CONST_INT
   67         | CONST_REAL

   68 write: WRITE VARIABLE
   69      | expr_cte

   70 read: READ VARIABLE


Terminales con las reglas donde aparecen

$end (0) 0
'-' (45) 22
error (256)
WHILE (258) 28
ENDWHILE (259) 28
IF (260) 31 32 35 37
ELSE (261) 32 35
ENDIF (262) 31 32 35 37
INT (263)
REAL (264)
STRING (265)
WRITE (266) 68
READ (267) 70
BETWEEN (268) 58
TAKE (269) 59
DECVAR (270)
ENDDEC (271)
CORCHETE_A (272) 58 59
CORCHETE_C (273) 58 59
COMA (274) 58 65
PUNTO_COMA (275) 3 4 58 59
PARENTESIS_A (276) 24 38 39 40 41 42 44 45 46 47 48 58 59
PARENTESIS_C (277) 24 38 39 40 41 42 44 45 46 47 48 58 59
OP_MENOR (278) 52
OP_MAYOR (279) 53
OP_MEN_IGU (280) 51
OP_MAY_IGU (281) 50
OP_NOT (282) 43 56 57
OP_AND (283) 40 42 45 46 54
OP_OR (284) 39 41 44 47 55
OP_COMP (285) 49
CONST_INT (286) 15 59 66
CONST_REAL (287) 16 67
VARIABLE (288) 12 13 26 57 58 68 70
CONST_STRING (289) 14
COMENTARIO_A (290)
COMENTARIO_C (291)
COMENTARIO (292)
. (293)
OP_SUMA (294) 17 60
OP_RESTA (295) 18 61
OP_DIV (296) 21
OP_MULT (297) 20 62 63
MENOS_UNARIO (298)
OP_ASIG (299) 12 13


No terminales con las reglas donde aparecen

$accept (46)
    en la izquierda: 0
programa (47)
    en la izquierda: 1, en la derecha: 0
prog (48)
    en la izquierda: 2, en la derecha: 1
sentencia (49)
    en la izquierda: 3 4, en la derecha: 2 3 29 31 32
grammar (50)
    en la izquierda: 5 6 7 8 9 10 11, en la derecha: 3 4
asig (51)
    en la izquierda: 12 13, en la derecha: 5
CONST_STRING_R (52)
    en la izquierda: 14, en la derecha: 13
NUMERO (53)
    en la izquierda: 15 16, en la derecha: 25
expr (54)
    en la izquierda: 17 18 19, en la derecha: 12 17 18 24 49 50 51
    52 53 54 55 56 58
termino (55)
    en la izquierda: 20 21 22 23, en la derecha: 17 18 19 20 21 22
    56
factor (56)
    en la izquierda: 24 25 26, en la derecha: 20 21 23
while (57)
    en la izquierda: 28, en la derecha: 7
$@1 (58)
    en la izquierda: 27, en la derecha: 28
while_exp (59)
    en la izquierda: 29, en la derecha: 28
if (60)
    en la izquierda: 31 32 35 37, en la derecha: 6
$@2 (61)
    en la izquierda: 30, en la derecha: 31
$@3 (62)
    en la izquierda: 33, en la derecha: 35
$@4 (63)
    en la izquierda: 34, en la derecha: 35
$@5 (64)
    en la izquierda: 36, en la derecha: 37
cond_completa (65)
    en la izquierda: 38 39 40 41 42 43 44 45 46 47 48, en la derecha:
    28 31 32 35 37 38 39 40 41 42 43 44 45
cond (66)
    en la izquierda: 49 50 51 52 53 54 55 56 57, en la derecha: 41
    42 44 45 46 47 48
between (67)
    en la izquierda: 58, en la derecha: 8
take (68)
    en la izquierda: 59, en la derecha: 9
operador (69)
    en la izquierda: 60 61 62 63, en la derecha: 59
lista_cte (70)
    en la izquierda: 64 65, en la derecha: 59 65
expr_cte (71)
    en la izquierda: 66 67, en la derecha: 64 65 69
write (72)
    en la izquierda: 68 69, en la derecha: 10
read (73)
    en la izquierda: 70, en la derecha: 11


estado 0

    0 $accept: . programa $end

    WHILE       desplazar e ir al estado 1
    IF          desplazar e ir al estado 2
    WRITE       desplazar e ir al estado 3
    READ        desplazar e ir al estado 4
    BETWEEN     desplazar e ir al estado 5
    TAKE        desplazar e ir al estado 6
    CONST_INT   desplazar e ir al estado 7
    CONST_REAL  desplazar e ir al estado 8
    VARIABLE    desplazar e ir al estado 9

    programa   ir al estado 10
    prog       ir al estado 11
    sentencia  ir al estado 12
    grammar    ir al estado 13
    asig       ir al estado 14
    while      ir al estado 15
    if         ir al estado 16
    between    ir al estado 17
    take       ir al estado 18
    expr_cte   ir al estado 19
    write      ir al estado 20
    read       ir al estado 21


estado 1

   28 while: WHILE . cond_completa $@1 while_exp ENDWHILE

    PARENTESIS_A  desplazar e ir al estado 22
    OP_NOT        desplazar e ir al estado 23

    cond_completa  ir al estado 24


estado 2

   31 if: IF . cond_completa sentencia $@2 ENDIF
   32   | IF . cond_completa sentencia ELSE sentencia ENDIF
   35   | IF . cond_completa $@3 ELSE $@4 ENDIF
   37   | IF . cond_completa $@5 ENDIF

    PARENTESIS_A  desplazar e ir al estado 22
    OP_NOT        desplazar e ir al estado 23

    cond_completa  ir al estado 25


estado 3

   68 write: WRITE . VARIABLE

    VARIABLE  desplazar e ir al estado 26


estado 4

   70 read: READ . VARIABLE

    VARIABLE  desplazar e ir al estado 27


estado 5

   58 between: BETWEEN . PARENTESIS_A VARIABLE COMA CORCHETE_A expr PUNTO_COMA expr CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 28


estado 6

   59 take: TAKE . PARENTESIS_A operador PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 29


estado 7

   66 expr_cte: CONST_INT .

    $default  reduce usando la regla 66 (expr_cte)


estado 8

   67 expr_cte: CONST_REAL .

    $default  reduce usando la regla 67 (expr_cte)


estado 9

   12 asig: VARIABLE . OP_ASIG expr
   13     | VARIABLE . OP_ASIG CONST_STRING_R

    OP_ASIG  desplazar e ir al estado 30


estado 10

    0 $accept: programa . $end

    $end  desplazar e ir al estado 31


estado 11

    1 programa: prog .

    $default  reduce usando la regla 1 (programa)


estado 12

    2 prog: sentencia .
    3 sentencia: sentencia . grammar PUNTO_COMA

    WHILE       desplazar e ir al estado 1
    IF          desplazar e ir al estado 2
    WRITE       desplazar e ir al estado 3
    READ        desplazar e ir al estado 4
    BETWEEN     desplazar e ir al estado 5
    TAKE        desplazar e ir al estado 6
    CONST_INT   desplazar e ir al estado 7
    CONST_REAL  desplazar e ir al estado 8
    VARIABLE    desplazar e ir al estado 9

    $default  reduce usando la regla 2 (prog)

    grammar   ir al estado 32
    asig      ir al estado 14
    while     ir al estado 15
    if        ir al estado 16
    between   ir al estado 17
    take      ir al estado 18
    expr_cte  ir al estado 19
    write     ir al estado 20
    read      ir al estado 21


estado 13

    4 sentencia: grammar . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 33


estado 14

    5 grammar: asig .

    $default  reduce usando la regla 5 (grammar)


estado 15

    7 grammar: while .

    $default  reduce usando la regla 7 (grammar)


estado 16

    6 grammar: if .

    $default  reduce usando la regla 6 (grammar)


estado 17

    8 grammar: between .

    $default  reduce usando la regla 8 (grammar)


estado 18

    9 grammar: take .

    $default  reduce usando la regla 9 (grammar)


estado 19

   69 write: expr_cte .

    $default  reduce usando la regla 69 (write)


estado 20

   10 grammar: write .

    $default  reduce usando la regla 10 (grammar)


estado 21

   11 grammar: read .

    $default  reduce usando la regla 11 (grammar)


estado 22

   38 cond_completa: PARENTESIS_A . cond_completa PARENTESIS_C
   39              | PARENTESIS_A . cond_completa OP_OR cond_completa PARENTESIS_C
   40              | PARENTESIS_A . cond_completa OP_AND cond_completa PARENTESIS_C
   41              | PARENTESIS_A . cond_completa OP_OR cond PARENTESIS_C
   42              | PARENTESIS_A . cond_completa OP_AND cond PARENTESIS_C
   44              | PARENTESIS_A . cond OP_OR cond_completa PARENTESIS_C
   45              | PARENTESIS_A . cond OP_AND cond_completa PARENTESIS_C
   46              | PARENTESIS_A . cond OP_AND cond PARENTESIS_C
   47              | PARENTESIS_A . cond OP_OR cond PARENTESIS_C
   48              | PARENTESIS_A . cond PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 34
    OP_NOT        desplazar e ir al estado 35
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO         ir al estado 40
    expr           ir al estado 41
    termino        ir al estado 42
    factor         ir al estado 43
    cond_completa  ir al estado 44
    cond           ir al estado 45


estado 23

   43 cond_completa: OP_NOT . cond_completa

    PARENTESIS_A  desplazar e ir al estado 22
    OP_NOT        desplazar e ir al estado 23

    cond_completa  ir al estado 46


estado 24

   28 while: WHILE cond_completa . $@1 while_exp ENDWHILE

    $default  reduce usando la regla 27 ($@1)

    $@1  ir al estado 47


estado 25

   31 if: IF cond_completa . sentencia $@2 ENDIF
   32   | IF cond_completa . sentencia ELSE sentencia ENDIF
   35   | IF cond_completa . $@3 ELSE $@4 ENDIF
   37   | IF cond_completa . $@5 ENDIF

    WHILE       desplazar e ir al estado 1
    IF          desplazar e ir al estado 2
    WRITE       desplazar e ir al estado 3
    READ        desplazar e ir al estado 4
    BETWEEN     desplazar e ir al estado 5
    TAKE        desplazar e ir al estado 6
    CONST_INT   desplazar e ir al estado 7
    CONST_REAL  desplazar e ir al estado 8
    VARIABLE    desplazar e ir al estado 9

    ENDIF     reduce usando la regla 36 ($@5)
    $default  reduce usando la regla 33 ($@3)

    sentencia  ir al estado 48
    grammar    ir al estado 13
    asig       ir al estado 14
    while      ir al estado 15
    if         ir al estado 16
    $@3        ir al estado 49
    $@5        ir al estado 50
    between    ir al estado 17
    take       ir al estado 18
    expr_cte   ir al estado 19
    write      ir al estado 20
    read       ir al estado 21


estado 26

   68 write: WRITE VARIABLE .

    $default  reduce usando la regla 68 (write)


estado 27

   70 read: READ VARIABLE .

    $default  reduce usando la regla 70 (read)


estado 28

   58 between: BETWEEN PARENTESIS_A . VARIABLE COMA CORCHETE_A expr PUNTO_COMA expr CORCHETE_C PARENTESIS_C

    VARIABLE  desplazar e ir al estado 51


estado 29

   59 take: TAKE PARENTESIS_A . operador PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C

    OP_SUMA   desplazar e ir al estado 52
    OP_RESTA  desplazar e ir al estado 53
    OP_MULT   desplazar e ir al estado 54

    operador  ir al estado 55


estado 30

   12 asig: VARIABLE OP_ASIG . expr
   13     | VARIABLE OP_ASIG . CONST_STRING_R

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    CONST_STRING  desplazar e ir al estado 57
    '-'           desplazar e ir al estado 39

    CONST_STRING_R  ir al estado 58
    NUMERO          ir al estado 40
    expr            ir al estado 59
    termino         ir al estado 42
    factor          ir al estado 43


estado 31

    0 $accept: programa $end .

    $default  aceptar


estado 32

    3 sentencia: sentencia grammar . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 60


estado 33

    4 sentencia: grammar PUNTO_COMA .

    $default  reduce usando la regla 4 (sentencia)


estado 34

   24 factor: PARENTESIS_A . expr PARENTESIS_C
   38 cond_completa: PARENTESIS_A . cond_completa PARENTESIS_C
   39              | PARENTESIS_A . cond_completa OP_OR cond_completa PARENTESIS_C
   40              | PARENTESIS_A . cond_completa OP_AND cond_completa PARENTESIS_C
   41              | PARENTESIS_A . cond_completa OP_OR cond PARENTESIS_C
   42              | PARENTESIS_A . cond_completa OP_AND cond PARENTESIS_C
   44              | PARENTESIS_A . cond OP_OR cond_completa PARENTESIS_C
   45              | PARENTESIS_A . cond OP_AND cond_completa PARENTESIS_C
   46              | PARENTESIS_A . cond OP_AND cond PARENTESIS_C
   47              | PARENTESIS_A . cond OP_OR cond PARENTESIS_C
   48              | PARENTESIS_A . cond PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 34
    OP_NOT        desplazar e ir al estado 35
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO         ir al estado 40
    expr           ir al estado 61
    termino        ir al estado 42
    factor         ir al estado 43
    cond_completa  ir al estado 44
    cond           ir al estado 45


estado 35

   43 cond_completa: OP_NOT . cond_completa
   57 cond: OP_NOT . VARIABLE

    PARENTESIS_A  desplazar e ir al estado 22
    OP_NOT        desplazar e ir al estado 23
    VARIABLE      desplazar e ir al estado 62

    cond_completa  ir al estado 46


estado 36

   15 NUMERO: CONST_INT .

    $default  reduce usando la regla 15 (NUMERO)


estado 37

   16 NUMERO: CONST_REAL .

    $default  reduce usando la regla 16 (NUMERO)


estado 38

   26 factor: VARIABLE .

    $default  reduce usando la regla 26 (factor)


estado 39

   22 termino: '-' . termino

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    termino  ir al estado 63
    factor   ir al estado 43


estado 40

   25 factor: NUMERO .

    $default  reduce usando la regla 25 (factor)


estado 41

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   49 cond: expr . OP_COMP expr
   50     | expr . OP_MAY_IGU expr
   51     | expr . OP_MEN_IGU expr
   52     | expr . OP_MENOR expr
   53     | expr . OP_MAYOR expr
   54     | expr . OP_AND expr
   55     | expr . OP_OR expr
   56     | expr . OP_NOT termino

    OP_MENOR    desplazar e ir al estado 64
    OP_MAYOR    desplazar e ir al estado 65
    OP_MEN_IGU  desplazar e ir al estado 66
    OP_MAY_IGU  desplazar e ir al estado 67
    OP_NOT      desplazar e ir al estado 68
    OP_AND      desplazar e ir al estado 69
    OP_OR       desplazar e ir al estado 70
    OP_COMP     desplazar e ir al estado 71
    OP_SUMA     desplazar e ir al estado 72
    OP_RESTA    desplazar e ir al estado 73


estado 42

   19 expr: termino .
   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor

    OP_DIV   desplazar e ir al estado 74
    OP_MULT  desplazar e ir al estado 75

    $default  reduce usando la regla 19 (expr)


estado 43

   23 termino: factor .

    $default  reduce usando la regla 23 (termino)


estado 44

   38 cond_completa: PARENTESIS_A cond_completa . PARENTESIS_C
   39              | PARENTESIS_A cond_completa . OP_OR cond_completa PARENTESIS_C
   40              | PARENTESIS_A cond_completa . OP_AND cond_completa PARENTESIS_C
   41              | PARENTESIS_A cond_completa . OP_OR cond PARENTESIS_C
   42              | PARENTESIS_A cond_completa . OP_AND cond PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 76
    OP_AND        desplazar e ir al estado 77
    OP_OR         desplazar e ir al estado 78


estado 45

   44 cond_completa: PARENTESIS_A cond . OP_OR cond_completa PARENTESIS_C
   45              | PARENTESIS_A cond . OP_AND cond_completa PARENTESIS_C
   46              | PARENTESIS_A cond . OP_AND cond PARENTESIS_C
   47              | PARENTESIS_A cond . OP_OR cond PARENTESIS_C
   48              | PARENTESIS_A cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 79
    OP_AND        desplazar e ir al estado 80
    OP_OR         desplazar e ir al estado 81


estado 46

   43 cond_completa: OP_NOT cond_completa .

    $default  reduce usando la regla 43 (cond_completa)


estado 47

   28 while: WHILE cond_completa $@1 . while_exp ENDWHILE

    WHILE       desplazar e ir al estado 1
    IF          desplazar e ir al estado 2
    WRITE       desplazar e ir al estado 3
    READ        desplazar e ir al estado 4
    BETWEEN     desplazar e ir al estado 5
    TAKE        desplazar e ir al estado 6
    CONST_INT   desplazar e ir al estado 7
    CONST_REAL  desplazar e ir al estado 8
    VARIABLE    desplazar e ir al estado 9

    sentencia  ir al estado 82
    grammar    ir al estado 13
    asig       ir al estado 14
    while      ir al estado 15
    while_exp  ir al estado 83
    if         ir al estado 16
    between    ir al estado 17
    take       ir al estado 18
    expr_cte   ir al estado 19
    write      ir al estado 20
    read       ir al estado 21


estado 48

    3 sentencia: sentencia . grammar PUNTO_COMA
   31 if: IF cond_completa sentencia . $@2 ENDIF
   32   | IF cond_completa sentencia . ELSE sentencia ENDIF

    WHILE       desplazar e ir al estado 1
    IF          desplazar e ir al estado 2
    ELSE        desplazar e ir al estado 84
    WRITE       desplazar e ir al estado 3
    READ        desplazar e ir al estado 4
    BETWEEN     desplazar e ir al estado 5
    TAKE        desplazar e ir al estado 6
    CONST_INT   desplazar e ir al estado 7
    CONST_REAL  desplazar e ir al estado 8
    VARIABLE    desplazar e ir al estado 9

    $default  reduce usando la regla 30 ($@2)

    grammar   ir al estado 32
    asig      ir al estado 14
    while     ir al estado 15
    if        ir al estado 16
    $@2       ir al estado 85
    between   ir al estado 17
    take      ir al estado 18
    expr_cte  ir al estado 19
    write     ir al estado 20
    read      ir al estado 21


estado 49

   35 if: IF cond_completa $@3 . ELSE $@4 ENDIF

    ELSE  desplazar e ir al estado 86


estado 50

   37 if: IF cond_completa $@5 . ENDIF

    ENDIF  desplazar e ir al estado 87


estado 51

   58 between: BETWEEN PARENTESIS_A VARIABLE . COMA CORCHETE_A expr PUNTO_COMA expr CORCHETE_C PARENTESIS_C

    COMA  desplazar e ir al estado 88


estado 52

   60 operador: OP_SUMA .

    $default  reduce usando la regla 60 (operador)


estado 53

   61 operador: OP_RESTA .

    $default  reduce usando la regla 61 (operador)


estado 54

   62 operador: OP_MULT .
   63         | OP_MULT .

    PUNTO_COMA  reduce usando la regla 62 (operador)
    PUNTO_COMA  [reduce usando la regla 63 (operador)]
    $default    reduce usando la regla 62 (operador)


estado 55

   59 take: TAKE PARENTESIS_A operador . PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C

    PUNTO_COMA  desplazar e ir al estado 89


estado 56

   24 factor: PARENTESIS_A . expr PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    expr     ir al estado 90
    termino  ir al estado 42
    factor   ir al estado 43


estado 57

   14 CONST_STRING_R: CONST_STRING .

    $default  reduce usando la regla 14 (CONST_STRING_R)


estado 58

   13 asig: VARIABLE OP_ASIG CONST_STRING_R .

    $default  reduce usando la regla 13 (asig)


estado 59

   12 asig: VARIABLE OP_ASIG expr .
   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 72
    OP_RESTA  desplazar e ir al estado 73

    $default  reduce usando la regla 12 (asig)


estado 60

    3 sentencia: sentencia grammar PUNTO_COMA .

    $default  reduce usando la regla 3 (sentencia)


estado 61

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   24 factor: PARENTESIS_A expr . PARENTESIS_C
   49 cond: expr . OP_COMP expr
   50     | expr . OP_MAY_IGU expr
   51     | expr . OP_MEN_IGU expr
   52     | expr . OP_MENOR expr
   53     | expr . OP_MAYOR expr
   54     | expr . OP_AND expr
   55     | expr . OP_OR expr
   56     | expr . OP_NOT termino

    PARENTESIS_C  desplazar e ir al estado 91
    OP_MENOR      desplazar e ir al estado 64
    OP_MAYOR      desplazar e ir al estado 65
    OP_MEN_IGU    desplazar e ir al estado 66
    OP_MAY_IGU    desplazar e ir al estado 67
    OP_NOT        desplazar e ir al estado 68
    OP_AND        desplazar e ir al estado 69
    OP_OR         desplazar e ir al estado 70
    OP_COMP       desplazar e ir al estado 71
    OP_SUMA       desplazar e ir al estado 72
    OP_RESTA      desplazar e ir al estado 73


estado 62

   57 cond: OP_NOT VARIABLE .

    $default  reduce usando la regla 57 (cond)


estado 63

   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor
   22        | '-' termino .

    $default  reduce usando la regla 22 (termino)


estado 64

   52 cond: expr OP_MENOR . expr

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    expr     ir al estado 92
    termino  ir al estado 42
    factor   ir al estado 43


estado 65

   53 cond: expr OP_MAYOR . expr

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    expr     ir al estado 93
    termino  ir al estado 42
    factor   ir al estado 43


estado 66

   51 cond: expr OP_MEN_IGU . expr

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    expr     ir al estado 94
    termino  ir al estado 42
    factor   ir al estado 43


estado 67

   50 cond: expr OP_MAY_IGU . expr

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    expr     ir al estado 95
    termino  ir al estado 42
    factor   ir al estado 43


estado 68

   56 cond: expr OP_NOT . termino

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    termino  ir al estado 96
    factor   ir al estado 43


estado 69

   54 cond: expr OP_AND . expr

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    expr     ir al estado 97
    termino  ir al estado 42
    factor   ir al estado 43


estado 70

   55 cond: expr OP_OR . expr

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    expr     ir al estado 98
    termino  ir al estado 42
    factor   ir al estado 43


estado 71

   49 cond: expr OP_COMP . expr

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    expr     ir al estado 99
    termino  ir al estado 42
    factor   ir al estado 43


estado 72

   17 expr: expr OP_SUMA . termino

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    termino  ir al estado 100
    factor   ir al estado 43


estado 73

   18 expr: expr OP_RESTA . termino

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    termino  ir al estado 101
    factor   ir al estado 43


estado 74

   21 termino: termino OP_DIV . factor

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38

    NUMERO  ir al estado 40
    factor  ir al estado 102


estado 75

   20 termino: termino OP_MULT . factor

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38

    NUMERO  ir al estado 40
    factor  ir al estado 103


estado 76

   38 cond_completa: PARENTESIS_A cond_completa PARENTESIS_C .

    $default  reduce usando la regla 38 (cond_completa)


estado 77

   40 cond_completa: PARENTESIS_A cond_completa OP_AND . cond_completa PARENTESIS_C
   42              | PARENTESIS_A cond_completa OP_AND . cond PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 34
    OP_NOT        desplazar e ir al estado 35
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO         ir al estado 40
    expr           ir al estado 41
    termino        ir al estado 42
    factor         ir al estado 43
    cond_completa  ir al estado 104
    cond           ir al estado 105


estado 78

   39 cond_completa: PARENTESIS_A cond_completa OP_OR . cond_completa PARENTESIS_C
   41              | PARENTESIS_A cond_completa OP_OR . cond PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 34
    OP_NOT        desplazar e ir al estado 35
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO         ir al estado 40
    expr           ir al estado 41
    termino        ir al estado 42
    factor         ir al estado 43
    cond_completa  ir al estado 106
    cond           ir al estado 107


estado 79

   48 cond_completa: PARENTESIS_A cond PARENTESIS_C .

    $default  reduce usando la regla 48 (cond_completa)


estado 80

   45 cond_completa: PARENTESIS_A cond OP_AND . cond_completa PARENTESIS_C
   46              | PARENTESIS_A cond OP_AND . cond PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 34
    OP_NOT        desplazar e ir al estado 35
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO         ir al estado 40
    expr           ir al estado 41
    termino        ir al estado 42
    factor         ir al estado 43
    cond_completa  ir al estado 108
    cond           ir al estado 109


estado 81

   44 cond_completa: PARENTESIS_A cond OP_OR . cond_completa PARENTESIS_C
   47              | PARENTESIS_A cond OP_OR . cond PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 34
    OP_NOT        desplazar e ir al estado 35
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO         ir al estado 40
    expr           ir al estado 41
    termino        ir al estado 42
    factor         ir al estado 43
    cond_completa  ir al estado 110
    cond           ir al estado 111


estado 82

    3 sentencia: sentencia . grammar PUNTO_COMA
   29 while_exp: sentencia .

    WHILE       desplazar e ir al estado 1
    IF          desplazar e ir al estado 2
    WRITE       desplazar e ir al estado 3
    READ        desplazar e ir al estado 4
    BETWEEN     desplazar e ir al estado 5
    TAKE        desplazar e ir al estado 6
    CONST_INT   desplazar e ir al estado 7
    CONST_REAL  desplazar e ir al estado 8
    VARIABLE    desplazar e ir al estado 9

    $default  reduce usando la regla 29 (while_exp)

    grammar   ir al estado 32
    asig      ir al estado 14
    while     ir al estado 15
    if        ir al estado 16
    between   ir al estado 17
    take      ir al estado 18
    expr_cte  ir al estado 19
    write     ir al estado 20
    read      ir al estado 21


estado 83

   28 while: WHILE cond_completa $@1 while_exp . ENDWHILE

    ENDWHILE  desplazar e ir al estado 112


estado 84

   32 if: IF cond_completa sentencia ELSE . sentencia ENDIF

    WHILE       desplazar e ir al estado 1
    IF          desplazar e ir al estado 2
    WRITE       desplazar e ir al estado 3
    READ        desplazar e ir al estado 4
    BETWEEN     desplazar e ir al estado 5
    TAKE        desplazar e ir al estado 6
    CONST_INT   desplazar e ir al estado 7
    CONST_REAL  desplazar e ir al estado 8
    VARIABLE    desplazar e ir al estado 9

    sentencia  ir al estado 113
    grammar    ir al estado 13
    asig       ir al estado 14
    while      ir al estado 15
    if         ir al estado 16
    between    ir al estado 17
    take       ir al estado 18
    expr_cte   ir al estado 19
    write      ir al estado 20
    read       ir al estado 21


estado 85

   31 if: IF cond_completa sentencia $@2 . ENDIF

    ENDIF  desplazar e ir al estado 114


estado 86

   35 if: IF cond_completa $@3 ELSE . $@4 ENDIF

    $default  reduce usando la regla 34 ($@4)

    $@4  ir al estado 115


estado 87

   37 if: IF cond_completa $@5 ENDIF .

    $default  reduce usando la regla 37 (if)


estado 88

   58 between: BETWEEN PARENTESIS_A VARIABLE COMA . CORCHETE_A expr PUNTO_COMA expr CORCHETE_C PARENTESIS_C

    CORCHETE_A  desplazar e ir al estado 116


estado 89

   59 take: TAKE PARENTESIS_A operador PUNTO_COMA . CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C

    CONST_INT  desplazar e ir al estado 117


estado 90

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   24 factor: PARENTESIS_A expr . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 91
    OP_SUMA       desplazar e ir al estado 72
    OP_RESTA      desplazar e ir al estado 73


estado 91

   24 factor: PARENTESIS_A expr PARENTESIS_C .

    $default  reduce usando la regla 24 (factor)


estado 92

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   52 cond: expr OP_MENOR expr .

    OP_SUMA   desplazar e ir al estado 72
    OP_RESTA  desplazar e ir al estado 73

    $default  reduce usando la regla 52 (cond)


estado 93

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   53 cond: expr OP_MAYOR expr .

    OP_SUMA   desplazar e ir al estado 72
    OP_RESTA  desplazar e ir al estado 73

    $default  reduce usando la regla 53 (cond)


estado 94

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   51 cond: expr OP_MEN_IGU expr .

    OP_SUMA   desplazar e ir al estado 72
    OP_RESTA  desplazar e ir al estado 73

    $default  reduce usando la regla 51 (cond)


estado 95

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   50 cond: expr OP_MAY_IGU expr .

    OP_SUMA   desplazar e ir al estado 72
    OP_RESTA  desplazar e ir al estado 73

    $default  reduce usando la regla 50 (cond)


estado 96

   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor
   56 cond: expr OP_NOT termino .

    OP_DIV   desplazar e ir al estado 74
    OP_MULT  desplazar e ir al estado 75

    $default  reduce usando la regla 56 (cond)


estado 97

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   54 cond: expr OP_AND expr .

    OP_SUMA   desplazar e ir al estado 72
    OP_RESTA  desplazar e ir al estado 73

    $default  reduce usando la regla 54 (cond)


estado 98

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   55 cond: expr OP_OR expr .

    OP_SUMA   desplazar e ir al estado 72
    OP_RESTA  desplazar e ir al estado 73

    $default  reduce usando la regla 55 (cond)


estado 99

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   49 cond: expr OP_COMP expr .

    OP_SUMA   desplazar e ir al estado 72
    OP_RESTA  desplazar e ir al estado 73

    $default  reduce usando la regla 49 (cond)


estado 100

   17 expr: expr OP_SUMA termino .
   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor

    OP_DIV   desplazar e ir al estado 74
    OP_MULT  desplazar e ir al estado 75

    $default  reduce usando la regla 17 (expr)


estado 101

   18 expr: expr OP_RESTA termino .
   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor

    OP_DIV   desplazar e ir al estado 74
    OP_MULT  desplazar e ir al estado 75

    $default  reduce usando la regla 18 (expr)


estado 102

   21 termino: termino OP_DIV factor .

    $default  reduce usando la regla 21 (termino)


estado 103

   20 termino: termino OP_MULT factor .

    $default  reduce usando la regla 20 (termino)


estado 104

   40 cond_completa: PARENTESIS_A cond_completa OP_AND cond_completa . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 118


estado 105

   42 cond_completa: PARENTESIS_A cond_completa OP_AND cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 119


estado 106

   39 cond_completa: PARENTESIS_A cond_completa OP_OR cond_completa . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 120


estado 107

   41 cond_completa: PARENTESIS_A cond_completa OP_OR cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 121


estado 108

   45 cond_completa: PARENTESIS_A cond OP_AND cond_completa . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 122


estado 109

   46 cond_completa: PARENTESIS_A cond OP_AND cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 123


estado 110

   44 cond_completa: PARENTESIS_A cond OP_OR cond_completa . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 124


estado 111

   47 cond_completa: PARENTESIS_A cond OP_OR cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 125


estado 112

   28 while: WHILE cond_completa $@1 while_exp ENDWHILE .

    $default  reduce usando la regla 28 (while)


estado 113

    3 sentencia: sentencia . grammar PUNTO_COMA
   32 if: IF cond_completa sentencia ELSE sentencia . ENDIF

    WHILE       desplazar e ir al estado 1
    IF          desplazar e ir al estado 2
    ENDIF       desplazar e ir al estado 126
    WRITE       desplazar e ir al estado 3
    READ        desplazar e ir al estado 4
    BETWEEN     desplazar e ir al estado 5
    TAKE        desplazar e ir al estado 6
    CONST_INT   desplazar e ir al estado 7
    CONST_REAL  desplazar e ir al estado 8
    VARIABLE    desplazar e ir al estado 9

    grammar   ir al estado 32
    asig      ir al estado 14
    while     ir al estado 15
    if        ir al estado 16
    between   ir al estado 17
    take      ir al estado 18
    expr_cte  ir al estado 19
    write     ir al estado 20
    read      ir al estado 21


estado 114

   31 if: IF cond_completa sentencia $@2 ENDIF .

    $default  reduce usando la regla 31 (if)


estado 115

   35 if: IF cond_completa $@3 ELSE $@4 . ENDIF

    ENDIF  desplazar e ir al estado 127


estado 116

   58 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A . expr PUNTO_COMA expr CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    expr     ir al estado 128
    termino  ir al estado 42
    factor   ir al estado 43


estado 117

   59 take: TAKE PARENTESIS_A operador PUNTO_COMA CONST_INT . PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C

    PUNTO_COMA  desplazar e ir al estado 129


estado 118

   40 cond_completa: PARENTESIS_A cond_completa OP_AND cond_completa PARENTESIS_C .

    $default  reduce usando la regla 40 (cond_completa)


estado 119

   42 cond_completa: PARENTESIS_A cond_completa OP_AND cond PARENTESIS_C .

    $default  reduce usando la regla 42 (cond_completa)


estado 120

   39 cond_completa: PARENTESIS_A cond_completa OP_OR cond_completa PARENTESIS_C .

    $default  reduce usando la regla 39 (cond_completa)


estado 121

   41 cond_completa: PARENTESIS_A cond_completa OP_OR cond PARENTESIS_C .

    $default  reduce usando la regla 41 (cond_completa)


estado 122

   45 cond_completa: PARENTESIS_A cond OP_AND cond_completa PARENTESIS_C .

    $default  reduce usando la regla 45 (cond_completa)


estado 123

   46 cond_completa: PARENTESIS_A cond OP_AND cond PARENTESIS_C .

    $default  reduce usando la regla 46 (cond_completa)


estado 124

   44 cond_completa: PARENTESIS_A cond OP_OR cond_completa PARENTESIS_C .

    $default  reduce usando la regla 44 (cond_completa)


estado 125

   47 cond_completa: PARENTESIS_A cond OP_OR cond PARENTESIS_C .

    $default  reduce usando la regla 47 (cond_completa)


estado 126

   32 if: IF cond_completa sentencia ELSE sentencia ENDIF .

    $default  reduce usando la regla 32 (if)


estado 127

   35 if: IF cond_completa $@3 ELSE $@4 ENDIF .

    $default  reduce usando la regla 35 (if)


estado 128

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   58 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expr . PUNTO_COMA expr CORCHETE_C PARENTESIS_C

    PUNTO_COMA  desplazar e ir al estado 130
    OP_SUMA     desplazar e ir al estado 72
    OP_RESTA    desplazar e ir al estado 73


estado 129

   59 take: TAKE PARENTESIS_A operador PUNTO_COMA CONST_INT PUNTO_COMA . CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C

    CORCHETE_A  desplazar e ir al estado 131


estado 130

   58 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expr PUNTO_COMA . expr CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 56
    CONST_INT     desplazar e ir al estado 36
    CONST_REAL    desplazar e ir al estado 37
    VARIABLE      desplazar e ir al estado 38
    '-'           desplazar e ir al estado 39

    NUMERO   ir al estado 40
    expr     ir al estado 132
    termino  ir al estado 42
    factor   ir al estado 43


estado 131

   59 take: TAKE PARENTESIS_A operador PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A . lista_cte CORCHETE_C PARENTESIS_C

    CONST_INT   desplazar e ir al estado 7
    CONST_REAL  desplazar e ir al estado 8

    lista_cte  ir al estado 133
    expr_cte   ir al estado 134


estado 132

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   58 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expr PUNTO_COMA expr . CORCHETE_C PARENTESIS_C

    CORCHETE_C  desplazar e ir al estado 135
    OP_SUMA     desplazar e ir al estado 72
    OP_RESTA    desplazar e ir al estado 73


estado 133

   59 take: TAKE PARENTESIS_A operador PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte . CORCHETE_C PARENTESIS_C
   65 lista_cte: lista_cte . COMA expr_cte

    CORCHETE_C  desplazar e ir al estado 136
    COMA        desplazar e ir al estado 137


estado 134

   64 lista_cte: expr_cte .

    $default  reduce usando la regla 64 (lista_cte)


estado 135

   58 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expr PUNTO_COMA expr CORCHETE_C . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 138


estado 136

   59 take: TAKE PARENTESIS_A operador PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 139


estado 137

   65 lista_cte: lista_cte COMA . expr_cte

    CONST_INT   desplazar e ir al estado 7
    CONST_REAL  desplazar e ir al estado 8

    expr_cte  ir al estado 140


estado 138

   58 between: BETWEEN PARENTESIS_A VARIABLE COMA CORCHETE_A expr PUNTO_COMA expr CORCHETE_C PARENTESIS_C .

    $default  reduce usando la regla 58 (between)


estado 139

   59 take: TAKE PARENTESIS_A operador PUNTO_COMA CONST_INT PUNTO_COMA CORCHETE_A lista_cte CORCHETE_C PARENTESIS_C .

    $default  reduce usando la regla 59 (take)


estado 140

   65 lista_cte: lista_cte COMA expr_cte .

    $default  reduce usando la regla 65 (lista_cte)
